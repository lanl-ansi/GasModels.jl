var documenterSearchIndex = {"docs":
[{"location":"math-model/#The-GasModels-Mathematical-Model","page":"Mathematical Model","title":"The GasModels Mathematical Model","text":"","category":"section"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"As GasModels implements a variety of gas network optimization problems, the implementation is the best reference for precise mathematical formulations.  This section provides a mathematical specification for a prototypical Gas Flow problem, to provide an overview of the typical mathematical models in GasModels.","category":"page"},{"location":"math-model/#Steady-State-Gas-Flow","page":"Mathematical Model","title":"Steady State Gas Flow","text":"","category":"section"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"GasModels implements a steady-state model of gas flow based on the Weymouth formulation that uses the 1-D hydrodynamic equations for natural gas flow in a pipe. In the following paragraphs, a derivation of the steady state equations used in GasModels is shown. To that end, we first assume that the flow is steady. Given this assumption, the conservation of momentum equation for the flow of gas in a pipe is given by","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"p fracpartial ppartial x = -fraclambda a^2 phi phi2 D","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"where p is pressure, lambda is a non dimensional friction factor, phi is mass flux, and D is the diameter of the pipe. Here, a^2=fracZRTm where Z is the gas compressibility factor, R is the universal gas constant, m is the molar mass of the gas, and T is the gas temperature. Again, for steady flow, the mass conservation reduces to:","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"    fracpartial phipartial x=0","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"where we have assumed the pipe area does not change with x. We also assume that gas pressure and gas density (rho) satisfy the equation of state, i.e. p = a^2 rho","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"Given that p fracpartial ppartial x= frac12 fracpartial p^2partial x and phi is a constant througout the pipe (from the mass conservation), the conservation of momentum equation is integrated from the start of the pipe at x=0 to the end of the pipe at x=L, where L is the length of the pipe. Then, the equation for flux across the pipe is stated as","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"    p^2(L)-p^2(0) = frac-lambda L a^2 phi phi D ","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"We typically express the mass flux through the pipe in terms of mass flow, f, where f=phi A. Here, A=fracpi D^24 is the cross-sectional area of the pipe. Thus, the equation for mass flow through the pipe is stated as","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"    p^2(L)-p^2(0) = frac-lambda L a^2 f f D A^2","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"To create a better numerically conditioned problem, it is very useful to non-dimensionalize the units. Here we use a typical pressure p_0 and a typical mass flow f_0 and normalize the equations. This yields","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"    tildep^2(L)-tildep^2(0) = -tildef tildef left(fraclambda L Dright) left(fracf_0^2a^2A^2p_0^2right)","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"where tildef=fracff_0 and tildep=fracpp_0 are the dimensionless mass flow and pressure, respectively, and are both of order one. Note that both terms in parenthesis on the right hand side of this equation are dimensionless.  For the purposes of convenience, we define resistance, w, as the constant","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"w=left(fraclambda L Dright) left(fracf_0^2a^2A^2p_0^2right)","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"Finally, in most data sets, nodal injections and withdrawals are defined in terms of volumetric flow, q, at a STP conditions. Given this data, we non-dimensionalize based on q. At STP conditions, the mass flow is derived as f=fracqrho_s, where  rho_s is the gas density at STP conditions.","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"A complete gas flow mathematical model is the defined by","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"beginaligned\ntextsets \n N  textjunctions \n A^p  textpipes  \n A^c  textcompressors  \n A^v  textvalves  \n A = A^p cup A^c cup A^v  textedges   \n P P_i  textproducers and producers at junction i   \n C C_i  textconsumers and consumers at junction i    \n\ntextdata \n w_a  textresistance factor of pipeline a \n fl_j  textconsumption (mass flow) at consumer j \n fg_j  textproduction (mass flow) at producer j \n underlinealpha_a=1 overlinealpha_a  text(de)compression limits (squared) of edge a \n underlinep_i ge 0overlinep_i  textlimits on pressure squared at node i \n\ntextvariables \n p_i  textpressure squared at node i \n f_a  textmass flow on edge a \n alpha_a  textcompression ratio on compressor a\n v_a  textvalve status for valve a 1 if valve is open\n\ntextconstraints \n (p_i - p_j) = w_a f_af_a textWeymouth equation for pipe a \n textconnected from junction i to junction j  \nsumlimits_a=a_ijin A f_a - sumlimits_a=a_ji in A f_a = sum_j in P_i fg_j- sum_j in C_i fl_j  textmass flow balance at junction i \n alpha_a p_i = p_j  textcompression boost at compressor a \ntextmass flux balance at junction i \n f_a (1-alpha_a) le 0 textcompression ratio is forced to 1 \n textwhen flow is reversed through compressor a \nunderlinep_i leq p_i leq overlinep_i  textpressure limits at junction i \nunderlinealpha_a leq alpha_a leq overlinealpha_a  textcompression limits at compressor i \n-v_a M leq f_a leq v_a M  textonoff operations for valve a \n textwhere M is the maximum flow through the valve \np_j - v_a overlinep_j leq p_i leq p_j + v_a overlinep_i  textlinks junction pressures of valve a \n textconnected from junction i to junction j\nendaligned","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"most of the optimization models of GasModels are variations of this formulation. In practice, we discretize on flow direction to reduce the non convexities of this model and relax the assumption that the minimum compression ratio is 1.","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"SI Units for various parameters","category":"page"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"Parameter Description SI Units\nD Pipe Diameter m\nL Pipe Length m\nA Pipe Area Cross Section m^2\np Gas Pressure pascals\nrho Gas Density kg/m^3\nZ Gas compressibility factor none\nm Gas Molar Mass kg/mol\nT Gas Temperature K\nR Universal Gas Constant J/mol/K\nphi Gas Mass Flux kg/m^2/s\nf Gas Mass Flow kg/s\nlambda Pipe friction factor none\na Speed of sound m/s","category":"page"},{"location":"math-model/#Transient-Gas-Flow","page":"Mathematical Model","title":"Transient Gas Flow","text":"","category":"section"},{"location":"math-model/","page":"Mathematical Model","title":"Mathematical Model","text":"The transient gas flow dynamics implements a lumped element reduced-order model presented in this paper and its (arxiv version). An interested reader is referred to that work for detailed development of the dynamics. ","category":"page"},{"location":"data-format/#Matgas-Format-(.m)","page":"Input Data Formats","title":"Matgas Format (.m)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Here we detail the parameters that can be inputted using the matgas format. They can be inputted in the order they appear here, or selectively, in the case where some data is not required, by using the following header format.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"%% junction data\n% id p_min p_max p_nominal junction_type status pipeline_name edi_id lat lon","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"See case files in test/data/matgas or examples/data/matgas for examples of file syntax.","category":"page"},{"location":"data-format/#Junctions-(mgc.junction)","page":"Input Data Formats","title":"Junctions (mgc.junction)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model “point” locations in the system, i.e. locations of withdrawal or injection, or simply connection points between pipes. Each junction may have multiple pipes attached.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Junction id   Y Unique id for junctions\np_min Float64 Pressure Minimum Pascal PSI Y Optimization constraint\np_max Float64 Pressure Maximum Pascal PSI Y Maximum operating pressure (MOP, psig) used in line pack calculations, which is lower than the maximum allowable operating pressure (MAOP, psig)\np_nominal Float64 Pressure Pascal PSI Y Nominal pressure, can have a default that lies between the pressure min/max\njunction_type Int Junction Type   Y Classification of the junction: 0 = standard node, 1 = slack node\nstatus Int Junction Status   Y Determines if the component is active in the model\npipeline_name String Pipeline Name    Name of the pipeline to which this junction belongs\nedi_id String EDI ID    EDI ID if applicable, to enabled easy input of near-real-time EDI data\nlat Float64 Latitude Decimal degrees Decimal degrees  Latitude of the junction\nlon Float64 Longitude Decimal degrees Decimal degrees  Longitude of the junction","category":"page"},{"location":"data-format/#Pipes-(mgc.pipe)","page":"Input Data Formats","title":"Pipes (mgc.pipe)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model pipelines which connect two junctions.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Pipe id   Y Unique id for pipes\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\ndiameter Float64 Diameter Meters Inches Y Pipe diameter\nlength Float64 Length Meters Miles Y Pipe Length\nfriction_factor Float64 Friction Factor   Y parameter based on the relative roughness of the pipe and Reynolds Number\np_min Float64 Pressure Minimum Pascal PSI Y Float value link minimum pressure used as optimization constraint, typically set equal to 14.7 psia, which is equivalent to 1.01325 bar\np_max Float64 Pressure Maximum Pascal PSI Y Maximum allowable operating pressure (MAOP,psig) for a given pipeline segment\nstatus Int Pipe status   Y Determines if the component is active in the model\nis_bidirectional Int Bi-directionality    Specifies whether the pipe supports bi-directional flow\npipeline_name String Pipeline Name    Name of the pipeline to which this pipe belongs\nnum_spatial_discretization_points Int Space points    Number of spatial discretization points in the pipe, used for Transient calculations","category":"page"},{"location":"data-format/#Compressors-(mgc.compressor)","page":"Input Data Formats","title":"Compressors (mgc.compressor)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model infrastructure used to boost pressure between two nodes.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Compressor id   Y Unique id for compressor\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\nc_ratio_min Float64 Minimum compression ratio   Y Minimum compression ratio\nc_ratio_max Float64 Maximum compression ratio   Y Maximum compression ratio\npower_max Float64 Maximum power W HP Y Float value compressor max power, used as optimization constraint\nflow_min Float64 Minimum mass flow kg/s  Y Minimum mass flow\nflow_max Float64 Maximum mass flow kg/s  Y Maximum mass flow\ninlet_p_min Float64 Minimum inlet pressure Pascal PSI Y Minimum pressure at compressor inlet\ninlet_p_max Float64 Maximum inlet pressure Pascal PSI Y Maximum pressure at compressor inlet\noutlet_p_min Float64 Minimum outlet pressure Pascal PSI Y Minimum pressure at compressor outlet\noutlet_p_max Float64 Maximum outlet pressure Pascal PSI Y Maximum pressure at compressor outlet\nstatus Int Compressor status   Y Determines if the component is active in the model\noperating_cost Float64 Operating cost /W /kW  Cost to operate compressor\ndirectionality Int Directionality    An integer value that denotes the directionality of compression and flow: 0 = bi-directional compressor, 1 = unidirectional compressor with no reversal for flow allowed, 2 = unidirectional compressor which allows for uncompressed reversal of flows\ncompressorstationname String Compressor Station Name    Name of compressor stations\npipeline_name String Pipeline name    Name of Pipeline\ntotal_installed_power Float64 Total installed power W W  Total installed horsepower – same as maximum power\nnum_compressor_units Int Number of compressor units    Number of compressor units – needed to account for number of gas-fired compressors versus those driven by electric power\ncompressor_type String Compressor Type    Compressor type (reciprocal versus turbine) – used to determine compressor efficiency\ndesign_suction_pressure Float64 Design Suction Pressure Pascal PSI  Used to estimate compressor max pressure delta\ndesign_discharge_pressure Float64 Design discharge pressure Pascal PSI  Used to determine maximum extent of line pack for downstream pipeline segments\nmax_compressed_volume Float64 Maximum compressed volume    Maximum volume compressed at design conditions\ndesign_fuel_required Float64 Design fuel required  MMSCFD  Fuel required at design conditions\ndesign_electric_power_required Float64 Design electric power required  kWh/day  Electric power required at design conditions – determines which compressor stations could be affected by an electric outage\nnum_units_for_peak_service Int Number of units for peak service    Number of units in service during peak conditions\npeak_year Int Peak year    Year of peak conditions","category":"page"},{"location":"data-format/#Short-Pipes-(mgc.short_pipe)","page":"Input Data Formats","title":"Short Pipes (mgc.short_pipe)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model, e.g., handling complicated contract situations at single entry points; they are modeled to have zero resistance.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Short pipe id   Y Unique id for short pipe\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\nstatus Int Short Pipe status   Y Determines if the component is active in the model\nis_bidirectional Int Bi-directionality    Specifies whether the pipe supports bi-directional flow\npipeline_name String Pipeline Name    Name of the pipeline to which this pipe belongs","category":"page"},{"location":"data-format/#Resistors-(mgc.resistor)","page":"Input Data Formats","title":"Resistors (mgc.resistor)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model pressure drops for which no other data or models are available.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Resistor id   Y Unique id for resistor\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\ndrag Float64 Drag factor   Y the drag factor of the resistors - non dimensional value\nstatus Int Resistor status   Y Determines if the component is active in the model\nis_bidirectional Int Bi-directionality    Specifies whether the pipe supports bi-directional flow\npipeline_name String Pipeline Name    Name of the pipeline to which this pipe belongs","category":"page"},{"location":"data-format/#Loss-Resistors-(mgc.loss_resistor)","page":"Input Data Formats","title":"Loss Resistors (mgc.loss_resistor)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model constant pressure drops along edges.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Loss resistor id   Y Unique id for resistor\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\np_loss Float64 Pressure loss Pascal PSI Y Constant pressure loss across the loss resistor\nstatus Int Loss resistor status   Y Determines if the component is active in the model\nis_bidirectional Int Bi-directionality    Specifies whether the loss resistor supports bi-directional flow","category":"page"},{"location":"data-format/#Regulators-(mgc.regulator)","page":"Input Data Formats","title":"Regulators (mgc.regulator)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model pressure reducing valves.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Regulator id   Y Unique id for regulator\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\n_factor_min Float64 Minimum reduction factor   Y This value is necessarily < 1\nreduction_factor_max Float64 Maximum reduction factor   Y Default value = 1, but can be < 1\nflow_min Float64 Minimum flow kg/s MMSCFD Y Minimum flow through the regulator\nflow_max Float64 Maximum flow kg/s MMSCFD Y Maximum flow through the regulator\nstatus Int Regulator status   Y Determines if the component is active in the model\ndischarge_coefficient Float64 Discharge coefficient   Y More commonly known as the \"flow coefficient Kv\"\ndesign_flow_rate Float64 kg/s MMSCFD   Maximum design flow\ndesign_inlet_pressure Float64 Pascal PSI   Pressure upstream of the regulator\ndesign_outlet_pressure Float64 Pascal PSI   Pressure downstream of the regulator\npipeline_name String Pipeline Name    Name of the pipeline to which this pipe belongs","category":"page"},{"location":"data-format/#Valves-(mgc.valve)","page":"Input Data Formats","title":"Valves (mgc.valve)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These model components which close off flow between two points in a natural gas network.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Valve id   Y Unique id for valve\nfr_junction Int From Junction id   Y Unique id of the junction on the from side\nto_junction Int To Junction id   Y Unique id of the junction on the to side\nstatus Int Valve status   Y Determines if the component is active in the model\nflow_coefficient Float64 Flow Coefficient   Y Coefficient of flow (Cv) – used to determine a valve’s flow under various conditions (e.g., potentially partially open)\npipeline_name String Pipeline Name    Name of the pipeline to which this pipe belongs","category":"page"},{"location":"data-format/#Transfers-(mgc.transfer)","page":"Input Data Formats","title":"Transfers (mgc.transfer)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model interconnects, i.e. points in the network that can act both as a receipt point or delivery point at different times of the day (redundant for steady-state). In practice, a transfer could be modeled as a receipt point and a delivery point, however, modeling it as a transfer allows for explicitly stating that a boundary condition can act as either an injection or consumption–but not both.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Transfer id   Y Unique id for transfer\njunction_id Int Junction id   Y Unique id of Junction to which component is connected\nwithdrawal_min Float64 Minimum Withdrawal kg/s MMSCFD Y This number can be negative, in which case it means that the transfer point is injecting gas into the system\nwithdrawal_max Float64 Maximum Withdrawal kg/s MMSCFD Y this variable can depend on flow direction\nwithdrawal_nominal Float64 Nominal Withdrawal kg/s MMSCFD Y Can have a default of 0.0\nis_dispatchable Int Dispatchable   Y If the component is marked as dispatchable, it means that it can vary its withdrawal between its minimum and maximum. If not, then the component is injecting or withdrawing exactly at the nominal withdrawal rate\nstatus Int Transfer status   Y Determines if the component is active in the model\nbid_price Float64 Bid Price /kg /vol  Bid price\noffer_price Float64 Offer Price /kg /vol  Offer price\nexchange_point_name String Exchange Point Name    Name of Exchange point\npipeline_name String Pipeline Name    Name of pipeline to which the transfer belongs\nother_pipeline_name String Other Pipeline Name    Name of pipeline to which the transfer connects\ndesign_pressure Float64 Design pressure  PSI  Maximum designed pressure\nmeter_capacity Float64 Meter Capacity  MMSCFD  Provided by real-time data collection (EDI), model constraint\ndaily_scheduled_flow Float64 Daily scheduled flow  MMSCFD  Provided by near-real-time data collection (EDI)","category":"page"},{"location":"data-format/#Receipts-(mgc.receipt)","page":"Input Data Formats","title":"Receipts (mgc.receipt)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model consumers of natural gas.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Receipt id   Y Unique id for receipt\njunction_id Int Junction id   Y Unique id of Junction to which component is connected\ninjection_min Float64 Minimum Injection kg/s MMSCFD Y Minimum amount of gas that can be injected\ninjection_max Float64 Maximum Injection kg/s MMSCFD Y Maximum amount of gas that can be injected\ninjection_nominal Float64 Nominal Injection kg/s MMSCFD Y Nominal gas injection\nis_dispatchable Int Dispatchable   Y If the component is marked as dispatchable, it means that it can vary its injection between its minimum and maximum. If not, then the component is injecting exactly at the nominal injection rate\nstatus Int Receipt status   Y Determines if the component is active in the model\noffer_price Float64 Offer Price /W /vol  Offer price\nname String Receipt Name    Name of receipt point\ncompany_name String Company Name    Name of company that owns receipt point\ndaily_scheduled_flow Float64 Daily Scheduled Flow  MMSCFD  Provided by real-time data collection (EDI), model constraint\ndesign_capacity Float64 Design Capacity  MMSCFD  Provided by real-time data collection (EDI), model constraint\noperating_capacity Float64 Operating Capacity  MMSCFD  Provided by real-time data collection (EDI), model constraint\nis_firm Int Interruptable vs Firm    Identifies the order by which the receipt flow could be curtailed (interruptible first, then firm)\nedi_id Int EDI ID    Unique ID to allow easy input of near-real-time EDI data","category":"page"},{"location":"data-format/#Deliveries-(mgc.delivery)","page":"Input Data Formats","title":"Deliveries (mgc.delivery)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components model producers (providers) of natural gas.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Delivery id   Y Unique id for delivery\njunction_id Int Junction id   Y Unique id of Junction to which component is connected\nwithdrawal_min Float64 Minimum withdrawal kg/s MMSCFD Y Minimum amount of gas that can be withdrawn\nwithdrawal_max Float64 Maximum withdrawal kg/s MMSCFD Y Maximum amount of gas that can be withdrawn\nwithdrawal_nominal Float64 Nominal withdrawal kg/s MMSCFD Y Nominal gas withdrawal\nis_dispatchable Int Dispatchable   Y If the component is marked as dispatchable, it means that it can vary its injection between its minimum and maximum. If not, then the component is injecting exactly at the nominal injection rate\nstatus Int Delivery status   Y Determines if the component is active in the model\nbid_price Float64 Bid Price /W /vol  Bid price\nname String Delivery Name    Name of delivery point\ncompany_name String Company Name    Name of company that owns delivery point\ndaily_scheduled_flow Float64 Daily Scheduled Flow  MMSCFD  Provided by real-time data collection (EDI), model constraint\ndesign_capacity Float64 Design Capacity  MMSCFD  Provided by real-time data collection (EDI), model constraint\noperating_capacity Float64 Operating Capacity  MMSCFD  Provided by real-time data collection (EDI), model constraint\nis_firm Int Interruptable vs Firm    Identifies the order by which the d flow could be curtailed (interruptible first, then firm)\nedi_id Int EDI ID    Unique ID to allow easy input of near-real-time EDI data","category":"page"},{"location":"data-format/#Storage-(mgc.storage)","page":"Input Data Formats","title":"Storage (mgc.storage)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"These components are used to model locations which can store and release natural gas.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\nid Int Storage id   Y Unique id for storage\njunction_id Int Junction id   Y Unique id of Junction to which component is connected\npressure_nominal Float64 Nominal pressure Pascal PSI Y pressure at the storage\nflow_injection_rate_min Float64 Minimum injection rate kg/s MMSCFD Y Minimum flow injection rate\nflow_injection_rate_max Float64 Maximum injection rate kg/s MMSCFD Y Maximum flow injection rate\nflow_withdrawal_rate_min Float64 Minimum withdrawal rate kg/s MMSCFD Y Minimum flow withdrawal rate\nflow_withdrawal_rate_max Float64 Maximum withdrawal rate kg/s MMSCFD Y Maximum flow withdrawal rate\ncapacity Float64 Capacity kg MMSCF Y Capacity of the storage\nstatus Int Storage status   Y Determines if the component is active in the model\nname String Storage Name    Name of the Storage point\nowner_name String Owner Name    Name of the Storage point owner\nstorage_type String Storage type    Type of storage (aquifer, salt cavern, or depleted oil and gas)\ndaily_withdrawal_max Float64 Daily withdrawal rate kg/s MMSCFD  Maximum daily withdrawal\nseasonal_withdrawal_max Float64 Seasonal withdrawal rate kg/s MMSCFD  Maximum Seasonal withdrawal\nbase_gas_capacity Float64 Base gas capacity kg MMSCF  Base gas capacity\nworking_gas_capacity Float64 Working gas capacity kg MMSCF  Working gas capacity\ntotal_field_capacity Float64 Total field capacity kg MMSCF  Total field gas capacity\nedi_id Int EDI ID    Unique ID to allow easy input of near-real-time EDI data","category":"page"},{"location":"data-format/#Network-Parameters-(mgc.*parameter*)","page":"Input Data Formats","title":"Network Parameters (mgc.parameter)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"Variable Type Name Standard Units (SI) United States Customary Units Required Description\ngas_specific_gravity Float64 Specific Gravity    Gas gravity\nspecific_heat_capacity_ratio Float64 Specific heat capacity    specific heat capacity ratio\ntemperature Float64 Temperature K   temperature of the network\nsound_speed Float64 Speed of Sound m/s   speed of sound in gas\nR Float64 Universal Gas Constant J/mol/K   Universal gas constant\ngas_molar_mass Float64 Molar Mass kg/mol   Molar Mass\ncompressibility_factor Float64 Compressibility factor    Compressibility factor (unitless)\nbase_pressure Float64 Base Pressure Pascal PSI  Base pressure in Pa or psi\nbase_length Float64 Base Length Meters Miles  Base length in m or miles\nbase_time Float64 Base Time Hours Hours  Base time in hr\nunits String Units    'si' for standard units or 'usc' for United States customary units\nis_per_unit Int Per-unit    If data is already in per-unit (non-dimensionalized\nname String Case Name    Name of Network Case\nyear Int Year    Year from which data originated","category":"page"},{"location":"data-format/#Matgas-extensions","page":"Input Data Formats","title":"Matgas extensions","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"The matgas format supports extensions which allow users to define arbitrary components and data which are used in customized problems and formulations.  For example, the syntax","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"  %column_names% data_field_name1, data_field_name2, ...\n  mgc.component_data = [\n  data1, data2\n  data1, data2\n  ...\n  ]","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"is used to add data to standard gas components.  In this example, the data dictionary for component will be augmented with fields called data_field_name1, data_field_name2, etc. The names trailing the keyword %column_name% are used as the keys in the data dictionary for each component. The key word mgc.component_data is used to indicate the component the new data should be associated with.  For example, mgc.pipe_data adds the data to pipes. The data should be listed in the same order as used by the tables that specify the required data for the component.  The syntax","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"  %column_names% data_field_name1, data_field_name2, ...\n  mgc.component = [\n  data1, data2\n  data1, data2\n  ...\n  ]","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"is then used to specify completely new components which are not specified in the default format.  This example would create an entry from components called component in the data dictionary.","category":"page"},{"location":"data-format/#Transient-Data-Format-(CSV)","page":"Input Data Formats","title":"Transient Data Format (CSV)","text":"","category":"section"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"The transient/time-series data will come in as one .csv file (comma separated format). The first column in the CSV format will be a time stamp in the date-time format YYYY-MM-DDTHH:MM:SS+HH:MM, where the +HH:MM indicates the timezone offset, the second column will be the component type, the third column will be the component id, the forth column will be the parameter name, and the fifth column will be the value of the parameter.  See below example for valid header names.","category":"page"},{"location":"data-format/","page":"Input Data Formats","title":"Input Data Formats","text":"timestamp,component_type,component_id,parameter,value\n1992-09-12T00:00:00.0+00:00,delivery,1,withdrawal_nominal,0.104678\n1992-09-13T00:00:00.0+00:00,delivery,1,withdrawal_nominal,0.540400\n1992-09-14T00:00:00.0+00:00,delivery,1,withdrawal_nominal,0.929477\n1992-09-15T00:00:00.0+00:00,delivery,1,withdrawal_nominal,0.412720","category":"page"},{"location":"network-data/#GasModels-Network-Data-Format","page":"Network Data Format","title":"GasModels Network Data Format","text":"","category":"section"},{"location":"network-data/#The-Network-Data-Dictionary","page":"Network Data Format","title":"The Network Data Dictionary","text":"","category":"section"},{"location":"network-data/","page":"Network Data Format","title":"Network Data Format","text":"Internally GasModels utilizes a dictionary to store network data. The dictionary uses strings as key values so it can be serialized to JSON for algorithmic data exchange. GasModels can utilize this serialization as a text file, however GasModels does not support backwards compatibility for such serializations. When used as serialization, the data is assumed to be in per_unit (non dimenisionalized) or SI units.","category":"page"},{"location":"network-data/","page":"Network Data Format","title":"Network Data Format","text":"The network data dictionary structure is roughly as follows:","category":"page"},{"location":"network-data/","page":"Network Data Format","title":"Network Data Format","text":"{\n\"name\":<string>,                         # a name for the model\n\"temperature\":<float>,                   # gas temperature. SI units are kelvin\n\"is_per_units\":<int>,                    # Whether or not the file is in per unit (non dimensional units) or SI units.\n\"is_english_units\":<int>,                # Whether or not the file is in english units\n\"gas_molar_mass\":<float>,                # molecular mass of the gas. SI units are kg/mol\n\"gas_specific_gravity\":<float>,          # the specific gravity of the gas. Non-dimensional.\n\"multinetwork\":<boolean>,                # flag for whether or not this is multiple networks\n\"base_length\":<float>,                   # Base for non-dimensionalizing space (length). Si units are m\n\"base_flow\":<float>,                     # Base for non-dimensionalizing mass flow. SI units are kg/s\n\"base_pressure\":<float>,                 # Base for non-dimensionalizing pressure. SI units are pascal\n\"base_time\":<float>,                     # Base for non-dimensionalizing time. SI units are s\n\"compressibility_factor\":<float>,        # Gas compressability. Non-dimensional.\n\"specific_heat_capacity_ratio\":<float>,  # Gas compressability. Non-dimensional.\n\"sound_speed\":<float>,                   # Speed of sound through the gas. SI units are m/s.\n\"R\":<float>,                             # Universal Gas constant. SI units are J/mol/K.\n\"junction\":{\n    \"1\":{\n      \"p_max\": <float>,    # maximum pressure. SI units are pascals\n      \"p_min\": <float>,    # minimum pressure. SI units are pascals\n      \"p_nominal\": <float>,  # nominal pressure. SI units are pascals\n      \"status\": <int>,    # status of the component (0 = off, 1 = on). Default is 1.\n      \"lat\":<float>, # latitude position of the junction (optional)\n      \"lon\":<float>, # latitude position of the junction (optional)\n       ...\n    },\n    \"2\":{...},\n    ...\n},\n\"delivery\":{\n    \"1\":{\n      \"junction_id\": <float>,  # junction id\n      \"withdrawal_max\": <float>,  # the maximum mass flow demand. SI units are kg/s.\n      \"withdrawal_min\": <float>,  # the minimum mass flow demand. SI units are kg/s.\n      \"withdrawal_nominal\": <float>, # nominal mass flow demand. SI units are kg/s.\n      \"priority\": <float>, # priority for serving the variable load. High numbers reflect a higher desired to serve this load.\n      \"bid_price\": <float>, # price for buying gas at the delivery.\n      \"is_dispatchable\": <int>,  # whether or not the unit is dispatchable (0 = delivery should consume withdrawl_nominal, 1 = delivery can consume between withdrawal_min and withdrawal_max).\n      \"status\": <int>,   # status of the component (0 = off, 1 = on). Default is 1.\n       ...\n    },\n    \"2\":{...},\n    ...\n},\n\"receipt\":{\n    \"1\":{\n      \"junction_id\": <float>,         # junction id\n      \"injection_min\": <float>,       # the minimum mass flow gas production. SI units are kg/s.\n      \"injection_max\": <float>,       # the maximum mass flow gas production. SI units are kg/s.\n      \"injection_nominal\": <float>,   # nominal mass flow production at standard density. SI units are kg/s.\n      \"dispatchable\": <int>,          # whether or not the unit is dispatchable (0 = receipt should produce injection_nominal, 1 = receipt can produce between injection_min and injection_max).\n      \"offer_price\": <float>,         # price for selling gas at the receipt.\n      \"status\": <int>,                # status of the component (0 = off, 1 = on). Default is 1.\n       ...\n    },\n    \"2\":{...},\n    ...\n},\n\"transfer\":{\n    \"1\":{\n        \"junction_id\": <float>,         # junction id\n        \"withdrawal_max\": <float>,      # the maximum mass flow demand. SI units are kg/s.\n        \"withdrawal_min\": <float>,      # the minimum mass flow demand. SI units are kg/s. (can be negative, in which case it is gas injection)\n        \"withdrawal_nominal\": <float>,  # nominal mass flow demand. SI units are kg/s.\n        \"offer_price\": <float>,         # price for selling gas at the receipt.\n        \"bid_price\": <float>,           # price for buying gas at the delivery.\n        \"is_dispatchable\": <int>,       # whether or not the unit is dispatchable (0 = transfer should consume withdrawl_nominal, 1 = transfer can consume between withdrawal_min and withdrawal_max).\n        \"status\": <int>,                # status of the component (0 = off, 1 = on). Default is 1.\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"pipe\":{\n    \"1\":{\n      \"length\": <float>,            # the length of the connection. SI units are m.\n      \"fr_junction\": <int>,         # the \"from\" side junction id\n      \"to_junction\": <int>,         # the \"to\" side junction id\n      \"friction_factor\": <float>,   # the friction component of the resistance term of the pipe. Non dimensional.\n      \"diameter\": <float>,          # the diameter of the connection. SI units are m.\n      \"status\": <int>,              # status of the component (0 = off, 1 = on). Default is 1.\n      \"p_max\": <float>,             # maximum pressure. SI units are pascals\n      \"p_min\": <float>,             # minimum pressure. SI units are pascals\n      \"is_bidirectional\": <int>,    # flag for whether or not flow can go in both directions\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"compressor\":{\n    \"1\":{\n      \"fr_junction\": <int>,         # the \"from\" side junction id\n      \"to_junction\": <int>,         # the \"to\" side junction id\n      \"c_ratio_min\": <float>,       # minimum multiplicative pressure change (compression or decompressions). Compression only goes from f_junction to t_junction (1 if flow reverses).\n      \"c_ratio_max\": <float>,       # maximum multiplicative pressure change (compression or decompressions). Compression only goes from f_junction to t_junction (1 if flow reverses).\n      \"status\": <int>,              # status of the component (0 = off, 1 = on). Default is 1.\n      \"operating_cost\": <float>,    # The cost per W of running the compressor\n      \"power_max\": <float>,         # Maximum power consumed by the compressor. SI units is W\n      \"type\": <int>,                # type of the compressor (two way compression or not, one way flow or not, etc.)\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n\"short_pipe\":{\n    \"1\":{\n      \"fr_junction\": <int>,         # the \"from\" side junction id\n      \"to_junction\": <int>,         # the \"to\" side junction id\n      \"status\": <int>,              # status of the component (0 = off, 1 = on). Default is 1.\n      \"is_bidirectional\": <int>,    # flag for whether or not flow can go in both directions\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n\"valve\":{\n    \"1\":{\n      \"fr_junction\": <int>,             # the \"from\" side junction id\n      \"to_junction\": <int>,             # the \"to\" side junction id\n      \"status\": <int>,                  # status of the component (0 = off, 1 = on). Default is 1.\n      \"is_bidirectional\": <int>,        # flag for whether or not flow can go in both directions\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n\"regulator\":{\n    \"1\":{\n      \"fr_junction\": <int>,             # the \"from\" side junction id\n      \"to_junction\": <int>,             # the \"to\" side junction id\n      \"reduction_factor_min\": <float>,  # minimum multiplicative pressure change (compression or decompressions). Compression only goes from f_junction to t_junction (1 if flow reverses).\n      \"reduction_factor_max\": <float>,  # maximum multiplicative pressure change (compression or decompressions). Compression only goes from f_junction to t_junction (1 if flow reverses).\n      \"status\": <int>,                  # status of the component (0 = off, 1 = on). Default is 1.\n      \"is_bidirectional\": <int>,        # flag for whether or not flow can go in both directions\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n\"resistor\":{\n    \"1\":{\n      \"fr_junction\": <int>,          # the \"from\" side junction id\n      \"to_junction\": <int>,          # the \"to\" side junction id\n      \"drag\": <float>,              # the drag factor of resistors. Non dimensional.\n      \"status\": <int>,              # status of the component (0 = off, 1 = on). Default is 1.\n      \"is_bidirectional\": <int>,    # flag for whether or not flow can go in both directions\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n\"loss_resistor\":{\n    \"1\":{\n      \"fr_junction\": <int>,         # the \"from\" side junction id\n      \"to_junction\": <int>,         # the \"to\" side junction id\n      \"p_loss\": <float>,            # constant pressure loss along the edge\n      \"status\": <int>,              # status of the component (0 = off, 1 = on). Default is 1.\n      \"is_bidirectional\": <int>,    # flag for whether or not flow can go in both directions\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n\"storage\":{\n    \"1\":{\n        \"id\": <int>,                                # id of the junction in which storage is located\n        \"well_diameter\": <float>,                   # diameter of the wells\n        \"well_depth\": <float>,                      # depth of the wells\n        \"well_friction_factor\": <float>,            # friction factor of the wells \n        \"reservoir_p_max\": <float>,                 # maximum pressure of the reservoir\n        \"base_gas_capacity\": <float>,               # base gas capacity in reservoir (SI units: kg)\n        \"total_field_capacity\": <float>,            # total gas capacity in reservoir (SI units: kg)\n        \"initial_field_capacity_percent\": <float>,  # initial gas in reservoir as a percentage of total capacity\n        \"reduction_factor_max\": <float>             # maximum reduction factor of the regulator \n        \"c_ratio_max\": <float>,                     # maximum compression ratio of the compressor\n        \"status\": <int>,                            # status of the component (0=off, 1=on). Default is 1.\n        \"flow_injection_rate_min\": <float>,         # minimum flow rate at which gas can be injected into storage. SI units is kg/s\n        \"flow_injection_rate_max\": <float>,         # maximum flow rate at which gas can be injected into storage. SI units is kg/s\n        \"flow_withdrawal_rate_min\": <float>,        # minimum flow rate at which gas can be withdrawn from storage. SI units is kg/s\n        \"flow_withdrawal_rate_max\": <float>,        # maxium flow rate at which gas can be withdrawn storage. SI units is kg/s  \n        ...\n    },\n    \"2\":{...},\n    ...\n}\n}","category":"page"},{"location":"network-data/","page":"Network Data Format","title":"Network Data Format","text":"All data is assumed to have consistent units (i.e. SI units or non-dimensionalized units)","category":"page"},{"location":"network-data/","page":"Network Data Format","title":"Network Data Format","text":"The following commands can be used to explore the network data dictionary,","category":"page"},{"location":"network-data/","page":"Network Data Format","title":"Network Data Format","text":"network_data = GasModels.parse_file(\"gaslib-40.m\")\ndisplay(network_data)","category":"page"},{"location":"developer/#Developer-Documentation","page":"Developer","title":"Developer Documentation","text":"","category":"section"},{"location":"developer/#Variable,-constraint-and-parameter-naming-scheme","page":"Developer","title":"Variable, constraint and parameter naming scheme","text":"","category":"section"},{"location":"developer/#Suffixes","page":"Developer","title":"Suffixes","text":"","category":"section"},{"location":"developer/","page":"Developer","title":"Developer","text":"_ne: used to denote a concept specific to network expansion problems\n_ls: used to denote a concept specific to implementations where production and consumption are variables.\n_on_off: used to denote a concept where there are either-or choices, such is valve operations or binary direction choices.","category":"page"},{"location":"developer/#Pressure","page":"Developer","title":"Pressure","text":"","category":"section"},{"location":"developer/","page":"Developer","title":"Developer","text":"p: pressure squared\npd_min: minimum pressure squared difference (computed value)\npd_max: maximum pressure squared difference (computed value)","category":"page"},{"location":"developer/#Flow","page":"Developer","title":"Flow","text":"","category":"section"},{"location":"developer/","page":"Developer","title":"Developer","text":"f: mass flow\nfl: mass flow consumption\nfg: mass flow production","category":"page"},{"location":"developer/#Developing-steady-state-problems-and-formulations","page":"Developer","title":"Developing steady-state problems and formulations","text":"","category":"section"},{"location":"developer/","page":"Developer","title":"Developer","text":"In the current version of GasModels, the supported variable space is pressure (p) and mass flow (f) for steady-state modeling. Long term there are plans to support problems specified in the variable space of density rho and mass flux phi.  Generally speaking, most steady-state models use/assume the single network formulation that is not discretized in time or space. Thus, most natural gas network models are read in and directly used by steady-state specifications.","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"A long term development plan is to largely unify the declaration of variables and constraints which are common to both steady-state and transient model (he only difference being single vs. multi-network representations).","category":"page"},{"location":"developer/#Developing-transient-problems-and-formulations","page":"Developer","title":"Developing transient problems and formulations","text":"","category":"section"},{"location":"developer/","page":"Developer","title":"Developer","text":"A basic version of the transient optimal gas flow problem is supported with the current version of GasModels. It uses the multi-network feature to formulate the problem. The entry point to create and prepare the transient data is the function parse_files() given below:","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"parse_files","category":"page"},{"location":"developer/#GasModels.parse_files","page":"Developer","title":"GasModels.parse_files","text":"\n\n\n\nParses two files - a static file and a transient csv file and prepares the data object. The static file is the .m file and the transient file is a .csv file that contains the time-series data information. The function takes in the following keyword arguments: (i) total_time (defaults to 86400 seconds or 24 hours) - this is the total time for which transient optimization needs to be solved (ii) time_step (defaults to 3600 seconds or 1 hours) - this argument specifies the time discretization step (iii) spatial_discretization (defaults to 10000 m or 10 km) - this argument specifies the spatial discretization step (iv) additional_time (defaults to 21600 seconds or 6 hours) - this argument decides the time horizon that needs to be padded to the total time to in case the user wishes to perform a moving horizon transient optimization.\n\n\n\n\n\n","category":"function"},{"location":"developer/","page":"Developer","title":"Developer","text":"The function, in addition to taking as input the static matgas file and time-series csv files (the formats are discussed in File IO section), can take additional keyword arguments that concern a transient formulation. They are: (1) total_time which is the total time duration of the transient formulation. It defaults to the value of 86400.0. Note that when this is the case the .csv file should contain time series data for the full 24 hours or else trying to construct a transient formulation would result in an error. The other keyword arguments include (2) time_step, (3) spatial_discretization, and (4) additional_time. As mentioned in the Transient Problem Specifications section the transient Optimal Gas Flow problem currently can work with only time-periodic time-series data. If the data is not time-periodic, then GasModels will try to fit a time-periodic spline to the data and then run the transient optimal gas flow problem. Notice that fitting a time-periodic spline for a non-time-periodic time series data would result in deviations from the given profiles and hence the argument additional_time can be used to pad the total_time with additional time to circumvent this issue. The parse_files function results in a multinetwork data model with the appropriate number of time discretizations that can then be used to formulate any transient optimization problem. The details of the transient formulation can be found in the section Transient Problem Specifications.","category":"page"},{"location":"parser/#File-IO","page":"File IO","title":"File IO","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"CurrentModule = GasModels","category":"page"},{"location":"parser/#General-Data-Formats","page":"File IO","title":"General Data Formats","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"The json file format is a direct JSON serialization of GasModels internal data model. As such, the json file format is intended to be a temporary storage format. GasModels does not maintain backwards compatibility with serializations of earlier versions of the Gas Models internal data model.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"parse_file\nparse_json","category":"page"},{"location":"parser/#GasModels.parse_file","page":"File IO","title":"GasModels.parse_file","text":"parse_file(io)\n\nParses the IOStream of a file into a GasModels data structure.\n\n\n\n\n\n\n\n\n\n","category":"function"},{"location":"parser/#GasModels.parse_json","page":"File IO","title":"GasModels.parse_json","text":"Grab the data from a json field\n\n\n\n\n\n\n\n\n\n","category":"function"},{"location":"parser/#Matgas-Data-Files","page":"File IO","title":"Matgas Data Files","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"The following method is the main methods for parsing Matgas data files:","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"parse_matgas","category":"page"},{"location":"parser/#GasModels.parse_matgas","page":"File IO","title":"GasModels.parse_matgas","text":"Parses the matgas data from either a filename or an IO object\n\n\n\n\n\n","category":"function"},{"location":"parser/","page":"File IO","title":"File IO","text":"We also provide the following (internal) helper methods:","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"Modules = [GasModels]\nPages   = [\"io/matgas.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"parser/#GasModels._gasmodels_to_matgas_string-Tuple{Dict{String, Any}}","page":"File IO","title":"GasModels._gasmodels_to_matgas_string","text":"write to matgas\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels._get_default","page":"File IO","title":"GasModels._get_default","text":"Get a default value for dict entry\n\n\n\n\n\n","category":"function"},{"location":"parser/#GasModels._matgas_to_gasmodels-Tuple{Dict{String, Any}}","page":"File IO","title":"GasModels._matgas_to_gasmodels","text":"Converts a matgas dict into a PowerModels dict\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels._merge_generic_data!-Tuple{Dict{String, Any}}","page":"File IO","title":"GasModels._merge_generic_data!","text":"merges Matlab tables based on the table extension syntax\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels.parse_m_file-Tuple{IO}","page":"File IO","title":"GasModels.parse_m_file","text":"parses matlab-formatted .m file\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels.parse_m_file-Tuple{String}","page":"File IO","title":"GasModels.parse_m_file","text":"parses matlab-formatted .m file\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels.parse_m_string-Tuple{String}","page":"File IO","title":"GasModels.parse_m_string","text":"parses matlab-format string\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels.parse_matgas-Tuple{Union{IO, String}}","page":"File IO","title":"GasModels.parse_matgas","text":"Parses the matgas data from either a filename or an IO object\n\n\n\n\n\n","category":"method"},{"location":"parser/#GasModels.write_matgas!-Tuple{Dict{String, Any}, String}","page":"File IO","title":"GasModels.write_matgas!","text":"writes data structure to matlab format\n\n\n\n\n\n","category":"method"},{"location":"parser/","page":"File IO","title":"File IO","text":"This format was designed to have a similar look a feel to the Matlab MatPower format (in the case of GasModels, we refer to it as the MatGas format), however, it standardizes around data requirements developed by the GasModels development team. It is largely stable. Additional fields for each component in the MatGas format can be incorporated using the Matlab extensions developed in InfrastructureModels.jl.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The top of the file contains global information about the network like its name, gas temperature, etc.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"function mgc = gaslib-40\n\n%% required global data\nmgc.gas_specific_gravity         = 0.6;\nmgc.specific_heat_capacity_ratio = 1.4;  % unitless\nmgc.temperature                  = 273.15;  % K\nmgc.compressibility_factor       = 0.8;  % unitless\nmgc.units                        = 'si';\n\n%% optional global data (that was either provided or computed based on required global data)\nmgc.gas_molar_mass               = 0.01857; % kg/mol\nmgc.R                            = 8.314;  % J/(mol K)\nmgc.base_length                  = 5000;  % m (non-dimensionalization value)\nmgc.base_pressure                = 8101325;  % Pa (non-dimensionalization value)\nmgc.base_flow                    = 604; (non-dimensionalization value)\nmgc.is_per_unit                  = 0;\nmgc.sound_speed                  = 312.8060","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"Junction data is defined with the following tabular format","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"%% junction data\n% id p_min p_max p_nominal junction_type status pipeline_name edi_id lat lon\nmgc.junction = [\n...\n]","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The reader is referred to Matgas Format (.m) for detailed description on each column in the above table.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"Pipeline data is defined with the following tabular format","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"%% pipe data\n% id fr_junction to_junction diameter length friction_factor p_min p_max status\nmgc.pipe = [\n...\n]","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The reader is referred to Matgas Format (.m) for detailed description on each column in the above table.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"Compressor data is defined with the following tabular format","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"%% compressor data\n% id fr_junction to_junction c_ratio_min c_ratio_max power_max flow_min flow_max inlet_p_min inlet_p_max outlet_p_min outlet_p_max status operating_cost directionality\nmgc.compressor = [\n...","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The reader is referred to Matgas Format (.m) for detailed description on each column in the above table.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"Receipt data is defined with the following tabular format","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"%% receipt data\n% id junction_id injection_min injection_max injection_nominal is_dispatchable status\nmgc.receipt = [\n...","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The reader is referred to Matgas Format (.m) for detailed description on each column in the above table.","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"Delivery data is defined with the following tabular format","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"%% delivery data\n% id junction_id withdrawal_min withdrawal_max withdrawal_nominal is_dispatchable status\nmgc.delivery = [\n...","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The reader is referred to Matgas Format (.m) for detailed description on each column in the above table.","category":"page"},{"location":"parser/#Parsing-Transient-Data","page":"File IO","title":"Parsing Transient Data","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"To run the transient formulations, apart from parsing the network file Matgas Format (.m), a time-series Transient Data Format (CSV) file has to be parsed. The following method provides a way to do so:","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"parse_files","category":"page"},{"location":"parser/","page":"File IO","title":"File IO","text":"The data dictionary returned by the above function is a multi-network data dictionary with spatial discretization performed on pipelines with length greater than spatial_discretization keyword argument.","category":"page"},{"location":"ss-specifications/#Steady-State-Problem-Specifications","page":"Problem Specifications","title":"Steady State Problem Specifications","text":"","category":"section"},{"location":"ss-specifications/#Gas-Flow-(GF)","page":"Problem Specifications","title":"Gas Flow (GF)","text":"","category":"section"},{"location":"ss-specifications/#Variables","page":"Problem Specifications","title":"Variables","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"variable_pressure(gm)\nvariable_pressure_sqr(gm)\nvariable_flow(gm)\nvariable_on_off_operation(gm)","category":"page"},{"location":"ss-specifications/#Constraints","page":"Problem Specifications","title":"Constraints","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"for i in ids(gm, :junction)\n    constraint_mass_flow_balance(gm, i)\nend\n\nfor i in ids(gm, :pipe)\n    constraint_pipe_pressure(gm, i)\n    constraint_pipe_mass_flow(gm,i)\n    constraint_pipe_weymouth(gm,i)\nend\n\nfor i in ids(gm, :resistor)\n    constraint_resistor_pressure(gm, i)\n    constraint_resistor_mass_flow(gm,i)\n    constraint_resistor_weymouth(gm,i)\nend\n\nfor i in ids(gm, :loss_resistor)\n    constraint_loss_resistor_pressure(gm, i)\n    constraint_loss_resistor_mass_flow(gm, i)\nend\n\nfor i in ids(gm, :short_pipe)\n  constraint_short_pipe_pressure(gm, i)\n  constraint_short_pipe_mass_flow(gm, i)\nend\n\nfor i in ids(gm, :compressor)\n    constraint_compressor_mass_flow(gm, i)\n    constraint_compressor_ratio(gm, i)\nend\n\nfor i in ids(gm, :valve)\n  constraint_on_off_valve_mass_flow(gm, i)\n  constraint_on_off_valve_pressure(gm, i)\nend\n\nfor i in ids(gm, :regulator)\n  constraint_on_off_regulator_mass_flow(gm, i)\n  constraint_on_off_regulator_pressure(gm, i)\nend","category":"page"},{"location":"ss-specifications/#Maximum-Load-(LS)","page":"Problem Specifications","title":"Maximum Load (LS)","text":"","category":"section"},{"location":"ss-specifications/#Variables-2","page":"Problem Specifications","title":"Variables","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"variable_flow(gm)\nvariable_pressure(gm)\nvariable_pressure_sqr(gm)\nvariable_on_off_operation(gm)\nvariable_load_mass_flow(gm)\nvariable_production_mass_flow(gm)","category":"page"},{"location":"ss-specifications/#Objective","page":"Problem Specifications","title":"Objective","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"objective_max_load(gm)","category":"page"},{"location":"ss-specifications/#Constraints-2","page":"Problem Specifications","title":"Constraints","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"for i in ids(gm,:pipe)\n    constraint_pipe_pressure(gm, i)\n    constraint_pipe_mass_flow(gm,i)\n    constraint_pipe_weymouth(gm,i)\nend\n\nfor i in ids(gm,:resistor)\n    constraint_resistor_pressure(gm, i)\n    constraint_resistor_mass_flow(gm,i)\n    constraint_resistor_weymouth(gm,i)\nend\n\nfor i in ids(gm, :loss_resistor)\n    constraint_loss_resistor_pressure(gm, i)\n    constraint_loss_resistor_mass_flow(gm, i)\nend\n\nfor i in ids(gm, :junction)\n    constraint_mass_flow_balance(gm, i)\nend\n\nfor i in ids(gm, :short_pipe)\n  constraint_short_pipe_pressure(gm, i)\n  constraint_short_pipe_mass_flow(gm, i)\nend\n\nfor i in ids(gm, :compressor)\n    constraint_compressor_mass_flow(gm, i)\n    constraint_compressor_ratio(gm, i)\nend\n\nfor i in ids(gm, :valve)\n  constraint_on_off_valve_mass_flow(gm, i)\n  constraint_on_off_valve_pressure(gm, i)\nend\n\nfor i in ids(gm, :regulator)\n  constraint_on_off_regulator_mass_flow(gm, i)\n  constraint_on_off_regulator_pressure(gm, i)\nend","category":"page"},{"location":"ss-specifications/#Expansion-Planning-(NE)","page":"Problem Specifications","title":"Expansion Planning (NE)","text":"","category":"section"},{"location":"ss-specifications/#Variables-3","page":"Problem Specifications","title":"Variables","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"variable_pressure(gm)\nvariable_pressure_sqr(gm)\nvariable_flow(gm)\nvariable_flow_ne(gm)\nvariable_on_off_operation(gm)\nvariable_pipe_ne(gm)\nvariable_compressor_ne(gm)","category":"page"},{"location":"ss-specifications/#Objective-2","page":"Problem Specifications","title":"Objective","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"objective_min_ne_cost(gm)","category":"page"},{"location":"ss-specifications/#Constraints-3","page":"Problem Specifications","title":"Constraints","text":"","category":"section"},{"location":"ss-specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"for i in ids(gm, :junction)\n    constraint_mass_flow_balance_ne(gm, i)\nend\n\nfor i in ids(gm,:pipe)\n    constraint_pipe_pressure(gm, i)\n    constraint_pipe_mass_flow(gm,i)\n    constraint_pipe_weymouth(gm,i)\nend\n\nfor i in ids(gm,:resistor)\n    constraint_resistor_pressure(gm, i)\n    constraint_resistor_mass_flow(gm,i)\n    constraint_resistor_weymouth(gm,i)\nend\n\nfor i in ids(gm, :loss_resistor)\n    constraint_loss_resistor_pressure(gm, i)\n    constraint_loss_resistor_mass_flow(gm, i)\nend\n\nfor i in ids(gm,:ne_pipe)\n    constraint_pipe_pressure(gm, i)\n    constraint_pipe_mass_flow(gm,i)\n    constraint_pipe_weymouth(gm,i)\nend\n\nfor i in ids(gm, :short_pipe)\n  constraint_short_pipe_pressure(gm, i)\n  constraint_short_pipe_mass_flow(gm, i)\nend\n\nfor i in ids(gm, :compressor)\n    constraint_compressor_mass_flow(gm, i)\n    constraint_compressor_ratio(gm, i)\nend\n\nfor i in ids(gm, :ne_compressor)\n    constraint_compressor_ratios_ne(gm, i)\n    constraint_compressor_ne(gm, i)\n    constraint_compressor_mass_flow_ne(gm, i)\nend\n\nfor i in ids(gm, :valve)\n  constraint_on_off_valve_mass_flow(gm, i)\n  constraint_on_off_valve_pressure(gm, i)\nend\n\nfor i in ids(gm, :regulator)\n  constraint_on_off_regulator_mass_flow(gm, i)\n  constraint_on_off_regualtor_pressure(gm, i)\nend","category":"page"},{"location":"quickguide/#Quick-Start-Guide","page":"Getting Started","title":"Quick Start Guide","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"Once Gas Models is installed, Juniper is installed, and a network data file (e.g. \"test/data/gaslib-40.m\") has been acquired, a Gas Flow with the second order cone (SOC) relaxation can be executed with,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"using GasModels\nusing Juniper\nusing Ipopt\nusing Cbc\nusing JuMP\n\njuniper_solver = JuMP.optimizer_with_attributes(Juniper.Optimizer,\n    \"nl_solver\" => JuMP.optimizer_with_attributes(Ipopt.Optimizer, \"tol\" => 1e-4, \"print_level\" => 0, \"sb\" => \"yes\"),\n    \"mip_solver\" => cbc_solver, \"log_levels\" => [])\nGasModels.run_soc_gf(\"test/data/matgas/gaslib-40.m\", juniper_solver)","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"Similarly, a full non-convex Gas Flow can be executed with an MINLP optimizer like","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"using GasModels\nusing Juniper\nusing JuMP\n\njuniper_solver = JuMP.optimizer_with_attributes(Juniper.Optimizer,\n    \"nl_solver\" => JuMP.optimizer_with_attributes(Ipopt.Optimizer, \"tol\" => 1e-4, \"print_level\" => 0, \"sb\" => \"yes\"),\n    \"mip_solver\" => cbc_solver, \"log_levels\" => [])\nGasModels.run_dwp_gf(\"test/data/matgas/gaslib-40.m\", juniper_solver)\n","category":"page"},{"location":"quickguide/#Getting-Results","page":"Getting Started","title":"Getting Results","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The run commands in GasModels return detailed results data in the form of a dictionary. This dictionary can be saved for further processing as follows,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"result = GasModels.run_soc_gf(\"test/data/matgas/gaslib-40.m\", juniper_solver)","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"For example, the algorithm's runtime, final objective value, and status can be accessed with,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"result[\"solve_time\"]\nresult[\"objective\"]\nresult[\"termination_status\"]","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The \"solution\" field contains detailed information about the solution produced by the run method. For example, the following dictionary comprehension can be used to inspect the junction pressures in the solution,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"Dict(name => data[\"p\"] for (name, data) in result[\"solution\"][\"junction\"])","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"For more information about GasModels result data see the GasModels Result Data Format section.","category":"page"},{"location":"quickguide/#Accessing-Different-Formulations","page":"Getting Started","title":"Accessing Different Formulations","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The function run_soc_gf and run_minl_gf are shorthands for a more general formulation-independent gas flow execution, run_gf. For example, run_soc_gf is equivalent to,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"run_gf(\"test/data/matgas/gaslib-40.m\", CRDWPGasModel, juniper_solver)","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"where \"CRDWPGasModel\" indicates an SOC formulation of the gas flow equations.  This more generic run_gf() allows one to solve a gas flow feasibility problem with any gas network formulation implemented in GasModels.  For example, the full non convex Gas Flow can be run with,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"run_gf(\"test/data/matgas/gaslib-40.m\", DWPGasModel, couenne_solver)","category":"page"},{"location":"quickguide/#Modifying-Network-Data","page":"Getting Started","title":"Modifying Network Data","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The following example demonstrates one way to perform multiple GasModels solves while modify the network data in Julia,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"network_data = GasModels.parse_file(\"test/data/matgas/gaslib-40.m\")\n\nrun_gf(network_data, CRDWPGasModel, juniper_solver)\n\nnetwork_data[\"junction\"][\"24\"][\"p_min\"] = 0.0\n\nrun_gf(network_data, CRDWPGasModel, juniper_solver)","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"For additional details about the network data, see the GasModels Network Data Format section.","category":"page"},{"location":"quickguide/#Inspecting-the-Formulation","page":"Getting Started","title":"Inspecting the Formulation","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The following example demonstrates how to break a run_gf call into separate model building and solving steps.  This allows inspection of the JuMP model created by GasModels for the gas flow problem,","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"gm = instantiate_model(\"test/data/matgas/gaslib-40.m\", CRDWPGasModel, GasModels.build_gf)\nprint(gm.model)\nJuMP.set_optimizer(gm.model, juniper_solver)\nJuMP.optimize!(gm.model, juniper_solver)","category":"page"},{"location":"quickguide/#Solution-conversion","page":"Getting Started","title":"Solution conversion","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The default behavior of GasModels produces solution results in non-dimensionalized units. To recover solutions in SI units, the following function can be used","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"GasModels.make_si_units!(result[\"solution\"])","category":"page"},{"location":"constraints/#Constraints","page":"Constraints","title":"Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"CurrentModule = GasModels","category":"page"},{"location":"constraints/#Constraint-Templates","page":"Constraints","title":"Constraint Templates","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"Constraint templates help simplify data wrangling across multiple Gas Flow formulations by providing an abstraction layer between the network data and network constraint definitions. The constraint template's job is to extract the required parameters from a given network data structure and pass the data as named arguments to the Gas Flow formulations.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"These templates should be defined over AbstractGasModel and should not refer to model variables. For more details, see the files: core/constraint_template.jl and core/constraint.jl.","category":"page"},{"location":"constraints/#Junction-Constraints","page":"Constraints","title":"Junction Constraints","text":"","category":"section"},{"location":"constraints/#Flow-balance-constraints","page":"Constraints","title":"Flow balance constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary constraints related to junctions ensure that mass flow is balanced at these nodes. The specifics of the constraint implementation will change if there are network design options (denoted by \\_ne in the name of the function).","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_mass_flow_balance\nconstraint_mass_flow_balance_ne","category":"page"},{"location":"constraints/#GasModels.constraint_mass_flow_balance","page":"Constraints","title":"GasModels.constraint_mass_flow_balance","text":"Constraint: standard flow balance equation where demand and production are variables\n\n\n\n\n\nTemplate: Constraints for mass flow balance equation where demand and production is are a mix of constants and variables\n\n\n\n\n\nConstraint: standard flow balance equation where demand and production are variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_mass_flow_balance_ne","page":"Constraints","title":"GasModels.constraint_mass_flow_balance_ne","text":"Constraint: standard flow balance equation where demand and production are variables and there are expansion connections\n\n\n\n\n\nTemplate: Constraints for mass flow balance equation where demand and production is are a mix of constants and variables and there are expansion connections\n\n\n\n\n\nConstraint: standard flow balance equation where demand and production are variables and there are expansion connections\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-On/off-Constraints","page":"Constraints","title":"Direction On/off Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special (redundant) constraints which tie the direction variables together.  Examples include ensuring that ensure at least one edge of junction that has only sources of natural gas has outgoing flow.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_source_flow\nconstraint_sink_flow\nconstraint_conserve_flow\nconstraint_source_flow_ne\nconstraint_sink_flow_ne\nconstraint_conserve_flow_ne","category":"page"},{"location":"constraints/#GasModels.constraint_source_flow","page":"Constraints","title":"GasModels.constraint_source_flow","text":"Constraint: Make sure there is at least one direction set to take flow away from a junction (typically used on source nodes)\n\n\n\n\n\nTemplate: Constraints for ensuring that at least one direction is set to take flow away from a junction (typically used on source nodes)\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_sink_flow","page":"Constraints","title":"GasModels.constraint_sink_flow","text":"Constraint: Make sure there is at least one direction set to take flow to a junction (typically used on sink nodes)\n\n\n\n\n\nTemplate: Constraints for ensuring that at least one direction is set to take flow away from a junction (typically used on sink nodes)\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_conserve_flow","page":"Constraints","title":"GasModels.constraint_conserve_flow","text":"Constraint: This constraint is intended to ensure that flow is one direction through a node with degree 2 and no production or consumption\n\n\n\n\n\nTemplate: Constraints to ensure that flow is the same direction through a node with degree 2 and no production or consumption \n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_source_flow_ne","page":"Constraints","title":"GasModels.constraint_source_flow_ne","text":"Constraint: Make sure there is at least one direction set to take flow away from a junction (typically used on source nodes)\n\n\n\n\n\nTemplate: Constraints for ensuring that at least one direction is set to take flow away from a junction (typically used on source nodes)\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_sink_flow_ne","page":"Constraints","title":"GasModels.constraint_sink_flow_ne","text":"Constraint: Make sure there is at least one direction set to take flow to a junction (typically used on sink nodes)\n\n\n\n\n\nTemplate: Constraints for ensuring that at least one direction is set to take flow away from a junction (typically used on sink nodes)\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_conserve_flow_ne","page":"Constraints","title":"GasModels.constraint_conserve_flow_ne","text":"Constraint: This constraint is intended to ensure that flow is on direction through a node with degree 2 and no production or consumption for a node with expansion edges\n\n\n\n\n\nTemplate: Constraints to ensure that flow is the same direction through a node with degree 2 and no production or consumption\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Pipe-Constraints","page":"Constraints","title":"Pipe Constraints","text":"","category":"section"},{"location":"constraints/#Weymouth's-law-constraints","page":"Constraints","title":"Weymouth's law constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary constraints related to pipes ensure that that pressure drop and flow across a pipe is related through the Weymouth relationships. Here, the naming convention ne is used to denote the form of the constraint used for expansion pipes.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_pipe_weymouth\nconstraint_pipe_weymouth_ne\nconstraint_pipe_weymouth_ne","category":"page"},{"location":"constraints/#GasModels.constraint_pipe_weymouth","page":"Constraints","title":"GasModels.constraint_pipe_weymouth","text":"Template: Weymouth equation for defining the relationship between pressure drop and flow across a pipe\n\n\n\n\n\nConstraint: Weymouth equation–not applicable for LRDWP models\n\n\n\n\n\nConstraint: Weymouth equation–not applicable for LRWP models\n\n\n\n\n\nWeymouth equation with absolute value\n\n\n\n\n\nWeymouth equation with discrete direction variables\n\nConstraint 1:\n\nThis constraint should be active when flow goes from i to j. Pressure needs to decrease from i to j. y = 1 models this condition When y = 1, this constraint becomes w(pi - pj) >= f^2, which is only true when pi >= pj When y = 0, we have w(pi - pj) >= f^2 - fmin^2 + w*pdmin. By definition, w(pi - pj) <= 0.  The lower bound on w(pi - pj) is w*pdmin. Since flow is reversed in this situation, f^2 is bounded by fmin^2. Thus f^2 - f_min^2 only further decreases the rhs. Thus, this constraint is always true (inactive when y = 0)\n\nConstraint 2:\n\nWhen y = 1, w(pi - pj) >= 0 this constraint needs to be active, so should be upper bounded by f^2 to get equality when combined with weymouth1\n\nWhen y = 0, w(pi - pj) <= 0, making this constraint always true (inactive when y = 0)\n\nConstraint 3:\n\nThis constraint should be active when flow goes from j to i. Pressure needs to decrease from j to i. y = 0 models this condition\n\nWhen y = 0, this constraint becomes w*(pj - pi) >= f^2, which is only true when pj >= pi\n\nWhen y = 1, we have w(pj - pi) >= f^2 - f_max^2 - wpd_max. By definition, w(pj - pi) <= 0.  The lower bound on w(pi - pj) is\n\n-w*pdmax (sign flip on pi amnd pj). Since flow is forward in this situation, f^2 is bounded by fmax^2. Thus f^2 - f_max^2 only further decreases the rhs.\n\nThus, this constraint is always true (inactive when y = 1)\n\nConstraint 4:\n\nWhen y = 0, w(pj - pi) >= 0 this constraint needs to be active, so should be upper bounded by f^2 to get equality when combined with weymouth3\n\nWhen y = 1, w(pj - pi) <= 0, making this constraint always true (inactive when y = 1)\n\nnote the sign flip between pi and pj\n\n\n\n\n\nWeymouth equation for a pipe\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_pipe_weymouth_ne","page":"Constraints","title":"GasModels.constraint_pipe_weymouth_ne","text":"Template: Weymouth equation for expansion pipes\n\n\n\n\n\nConstraint: Weymouth equation\n\n\n\n\n\nConstraint: Weymouth equation\n\n\n\n\n\nWeymouth equation for an expansion pipe\n\n\n\n\n\nWeymouth equation for an expansion pipe\n\nConstraint 1:\n\nWhen zp = 1, this constraint reduces to constraint weymouth1 in constraintpipeweymouth, which is what we want (i.e. an active constraint) When zp = 0, we want this constraint to be in active AND any y value should be valid.  In this case, since f^2 = 0 (there is no flow) the constraint becomes w(pi - pj) >= -(1-y) * (f_min^2 - wpdmin) - abs(w*pdmin). When y = 1, we have w(pi - pj) >= -abs(wpdmin). Since pdmin is the lower bound on pi - pj, this is always true.  When y = 0, we have w(pi - pj) >= -f_min^2 + wpdmin - abs(w*pdmin). Which is always true. wpd_min is the lower bound on wpi - pj and the other two terms just drive the lower bound further down.\n\nConstraint 2:\n\nWhen zp = 1, this constraint reduces to constraint weymouth2 in constraintpipeweymouth, which is what we want (i.e. an active constraint) When zp = 0, we have w(pi - pj) <= f^2 + wpdmax.  Since w*pdmax is the upper bound on w*(pi-pj), this is always true.\n\nConstraint 3:\n\nWhen zp = 1, this constraint reduces to constraint weymouth3 in constraintpipeweymouth, which is what we want (i.e. an active constraint) When zp = 0, we want this constraint to be in active AND any y value should be valid.  In this case, since f^2 = 0 (there is no flow) the constraint becomes w(pj - pi) >= - y * (f_max^2 + wpdmax) - abs(w*pdmax). When y = 0, we have w(pj - pi) >= -abs(wpdmax). Since -pdmax is the lower bound on pj - pi note reversal of pressure sign, this is always true.  When y = 1, we have w(pj - pi) >= -f_max^2 - wpdmax - abs(w*pdmax). Which is always true. -wpd_max is the lower bound on w(pj - pi) (note the sign flip). The other two terms just drive the lower bound further down.\n\nConstraint 4:\n\nWhen zp = 1, this constraint reduces to constraint weymouth4 in constraintpipeweymouth, which is what we want (i.e. an active constraint)\n\nWhen zp = 0, we have (pj - pi) <= f^2 - wpd_min).  Since -wpd_min is the upper bound on w*(pj-pi)–the pi and pj are flipped, this is always true.\n\n\n\n\n\nWeymouth equation for an expansion pipe\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Mass-flow-and-pressure-drop-constraints","page":"Constraints","title":"Mass flow and pressure drop constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"Secondarily, there are constraints associated with limits on pressure drop or mass flow across pipes. These constraints also use the ne and naming conventions.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_pipe_mass_flow\nconstraint_pipe_pressure","category":"page"},{"location":"constraints/#GasModels.constraint_pipe_mass_flow","page":"Constraints","title":"GasModels.constraint_pipe_mass_flow","text":"Constraint: Constraint on mass flow across the pipe\n\n\n\n\n\nTemplate: Constraint on mass flow across a pipe\n\n\n\n\n\nConstraint: Constraint on flow across a pipe when there are on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_pipe_pressure","page":"Constraints","title":"GasModels.constraint_pipe_pressure","text":"Constraint: Constraints which define pressure drop across a pipe\n\n\n\n\n\nTemplate: Pressure drop across pipes\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a pipe when there are on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Network-expansion-constraints","page":"Constraints","title":"Network expansion constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"These constraints turn on or off the association between pressure and flow for pipes designated as expansion options.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_pipe_ne","category":"page"},{"location":"constraints/#GasModels.constraint_pipe_ne","page":"Constraints","title":"GasModels.constraint_pipe_ne","text":"Constraint: on/off constraints on flow across pipes for expansion pipes\n\n\n\n\n\nTemplate: Constraint associatd with turning off flow depending on the status of expansion pipes\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-on/off-constraints","page":"Constraints","title":"Direction on/off constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special (redundant) constraints which tie the direction variables together.  Examples include ensuring that ensuring that parallel pipes have flow in the same direction.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_pipe_parallel_flow\nconstraint_ne_pipe_parallel_flow","category":"page"},{"location":"constraints/#GasModels.constraint_pipe_parallel_flow","page":"Constraints","title":"GasModels.constraint_pipe_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for pipe\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_ne_pipe_parallel_flow","page":"Constraints","title":"GasModels.constraint_ne_pipe_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for ne_pipe\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Resistor-Constraints","page":"Constraints","title":"Resistor Constraints","text":"","category":"section"},{"location":"constraints/#Weymouth's-law-constraints-2","page":"Constraints","title":"Weymouth's law constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary constraints related to resistor ensure that that pressure drop and flow across a resistor is related through the Weymouth relationships.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_resistor_weymouth","category":"page"},{"location":"constraints/#Mass-flow-and-pressure-drop-constraints-2","page":"Constraints","title":"Mass flow and pressure drop constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"Secondarily, there are constraints associated with limits on pressure drop or mass flow across pipes.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_resistor_mass_flow\nconstraint_resistor_pressure","category":"page"},{"location":"constraints/#GasModels.constraint_resistor_mass_flow","page":"Constraints","title":"GasModels.constraint_resistor_mass_flow","text":"Constraint: Constraint on mass flow across the resistor\n\n\n\n\n\nTemplate: Constraint on mass flow across a pipe\n\n\n\n\n\nConstraint: Constraint on flow across a resistor when there are on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_resistor_pressure","page":"Constraints","title":"GasModels.constraint_resistor_pressure","text":"Template: Pressure drop across resistor with on/off direction variables\n\n\n\n\n\nConstraint: Define pressures across a resistor\n\n\n\n\n\nConstraint: Define pressures across a resistor\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a resistor\n\n\n\n\n\nConstraint: Define pressures across a resistor\n\n\n\n\n\nConstraint: Define pressures across a resistor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-on/off-constraints-2","page":"Constraints","title":"Direction on/off constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special (redundant) constraints which tie the direction variables together.  Examples include ensuring that ensuring that parallel pipes have flow in the same direction.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_resistor_parallel_flow","category":"page"},{"location":"constraints/#GasModels.constraint_resistor_parallel_flow","page":"Constraints","title":"GasModels.constraint_resistor_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for resistor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Loss-Resistor-Constraints","page":"Constraints","title":"Loss Resistor Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary constraints related to loss resistors ensure that the pressure drop is constant along each edge. They also ensure that squared pressure variables are somehow related to (nonsquared) pressure variables.","category":"page"},{"location":"constraints/#Mass-flow-and-pressure-drop-constraints-3","page":"Constraints","title":"Mass flow and pressure drop constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_loss_resistor_mass_flow\nconstraint_loss_resistor_pressure","category":"page"},{"location":"constraints/#GasModels.constraint_loss_resistor_mass_flow","page":"Constraints","title":"GasModels.constraint_loss_resistor_mass_flow","text":"Constraint: Constraint on mass flow across the loss_resistor\n\n\n\n\n\nTemplate: Constraint on mass flow across a loss_resistor\n\n\n\n\n\nConstraint: Constraint on flow across a loss_resistor when there are on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_loss_resistor_pressure","page":"Constraints","title":"GasModels.constraint_loss_resistor_pressure","text":"Template: Pressure drop across loss_resistor with on/off direction variables\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a loss resistor\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a loss resistor\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a loss resistor\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a loss resistor\n\n\n\n\n\nConstraint: Constraints which define pressure drop across a loss resistor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Compressor-Constraints","page":"Constraints","title":"Compressor Constraints","text":"","category":"section"},{"location":"constraints/#Operations-Constraints","page":"Constraints","title":"Operations Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary constraints related to compressors ensure that that the compressors operate within the limits of their capability (boost ratio, energy consumption, etc.). These constraints use the ne naming conventions to denote constraints where the compressor is an expansion option.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_compressor_ratios\nconstraint_compressor_ratios_ne\nconstraint_compressor_mass_flow\nconstraint_compressor_energy","category":"page"},{"location":"constraints/#GasModels.constraint_compressor_ratios","page":"Constraints","title":"GasModels.constraint_compressor_ratios","text":"Template: Compression ratios for a compressor\n\n\n\n\n\nConstraint: enforces pressure changes bounds that obey compression ratios for a compressor with on/off direction variables\n\n\n\n\n\nConstraint: Compressor ratio constraints on pressure differentials–not applicable for LRWP models\n\n\n\n\n\nenforces pressure changes bounds that obey compression ratios\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_compressor_ratios_ne","page":"Constraints","title":"GasModels.constraint_compressor_ratios_ne","text":"Template: constraints on pressure drop across a compressor\n\n\n\n\n\nConstraint: constraints on pressure drop across expansion compressors with on/off decision variables\n\n\n\n\n\nConstraint: compressor ratios on a new compressor\n\n\n\n\n\nconstraints on pressure drop across a compressor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_compressor_mass_flow","page":"Constraints","title":"GasModels.constraint_compressor_mass_flow","text":"Constraint: constraints on flow across a compressor - handled by variable bounds\n\n\n\n\n\nTemplate: constraints on flow across a compressor\n\n\n\n\n\nConstraint: constraints on flow across a compressor with on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_compressor_energy","page":"Constraints","title":"GasModels.constraint_compressor_energy","text":"Template: Constraints on the compressor energy\n\n\n\n\n\nConstraint: constrains the energy of the compressor\n\n\n\n\n\nConstraint: constrains the energy of the compressor\n\n\n\n\n\nConstraint: constrains the energy of the compressor\n\n\n\n\n\nConstraint: constrains the energy of the compressor\n\n\n\n\n\nConstraint: constrains the energy of the compressor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-On/off-Constraints-2","page":"Constraints","title":"Direction On/off Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special constraints to connect direction of flow with the choice of the binary variable.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_compressor_parallel_flow\nconstraint_ne_compressor_parallel_flow","category":"page"},{"location":"constraints/#GasModels.constraint_compressor_parallel_flow","page":"Constraints","title":"GasModels.constraint_compressor_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for compressor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_ne_compressor_parallel_flow","page":"Constraints","title":"GasModels.constraint_ne_compressor_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for ne_compressor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Network-Expansion-Constraints","page":"Constraints","title":"Network Expansion Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"Constraints are also used to turn on/off flow through a compressor in expansion planning formulations","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_compressor_ne","category":"page"},{"location":"constraints/#GasModels.constraint_compressor_ne","page":"Constraints","title":"GasModels.constraint_compressor_ne","text":"Constraint: on/off constraints on flow across compressors for expansion variables\n\n\n\n\n\nTemplate: Constraint for turning on or off flow through expansion compressor\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Regulator-Constraints","page":"Constraints","title":"Regulator Constraints","text":"","category":"section"},{"location":"constraints/#Operations-Constraints-2","page":"Constraints","title":"Operations Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary constraints related to regulator ensure that that the valves operate within the limits of their capability (pressure reduction).  The control valve also has an open/close variable to determine whether or not flow is allowed through the valve","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_on_off_regulator_mass_flow\nconstraint_on_off_regulator_pressure","category":"page"},{"location":"constraints/#GasModels.constraint_on_off_regulator_mass_flow","page":"Constraints","title":"GasModels.constraint_on_off_regulator_mass_flow","text":"constraints on flow across control valves\n\n\n\n\n\nTemplate: constraints on flow across control valves with on/off direction variables\n\n\n\n\n\nConstraint: Constraints on flow across control valves with on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_on_off_regulator_pressure","page":"Constraints","title":"GasModels.constraint_on_off_regulator_pressure","text":"Constraint Enforces pressure changes bounds that obey decompression ratios for\n\n\n\n\n\nConstraint: Constraints on pressure drop across control valves that have on/off direction variables\n\n\n\n\n\nconstraints on pressure drop across control valves–not applicable for LRWP models\n\n\n\n\n\nconstraints on pressure drop across control valves\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-On/off-Constraints-3","page":"Constraints","title":"Direction On/off Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special constraints to connect direction of flow with the choice of the binary variable.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_regulator_parallel_flow","category":"page"},{"location":"constraints/#GasModels.constraint_regulator_parallel_flow","page":"Constraints","title":"GasModels.constraint_regulator_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for control valve\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Valve-Constraints","page":"Constraints","title":"Valve Constraints","text":"","category":"section"},{"location":"constraints/#Operations-Constraints-3","page":"Constraints","title":"Operations Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The primary function of a valve is to open or close a pipe.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_on_off_valve_mass_flow\nconstraint_on_off_valve_pressure","category":"page"},{"location":"constraints/#GasModels.constraint_on_off_valve_mass_flow","page":"Constraints","title":"GasModels.constraint_on_off_valve_mass_flow","text":"constraints on flow across valves\n\n\n\n\n\nTemplate: constraints on flow across valves modeled with on/off direction variables\n\n\n\n\n\nConstraint: Constraints on flow across valves with on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_on_off_valve_pressure","page":"Constraints","title":"GasModels.constraint_on_off_valve_pressure","text":"Constraint: Constraints on pressure drop across valves where the valve can open or close\n\n\n\n\n\nTemplate: Constraint on pressure drop across valves, where the valve may be closed or opened\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-On/off-Constraints-4","page":"Constraints","title":"Direction On/off Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special constraints to connect direction of flow with the choice of the binary variable.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_valve_parallel_flow","category":"page"},{"location":"constraints/#GasModels.constraint_valve_parallel_flow","page":"Constraints","title":"GasModels.constraint_valve_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for valve\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Short-Pipes","page":"Constraints","title":"Short Pipes","text":"","category":"section"},{"location":"constraints/#Pressure-Constraints","page":"Constraints","title":"Pressure Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"Short pipes are used to model frictionless connections between junctions.  The primary constraint ensures the pressure on both sides of the short pipe are the same. ","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_short_pipe_pressure\nconstraint_short_pipe_mass_flow","category":"page"},{"location":"constraints/#GasModels.constraint_short_pipe_pressure","page":"Constraints","title":"GasModels.constraint_short_pipe_pressure","text":"Constraint: Constraint on pressure drop across a short pipe\n\n\n\n\n\nTemplate: Constraint on pressure drop across a short pipe\n\n\n\n\n\n","category":"function"},{"location":"constraints/#GasModels.constraint_short_pipe_mass_flow","page":"Constraints","title":"GasModels.constraint_short_pipe_mass_flow","text":"Constraint: Constraints on flow across a short pipe with on/off direction variables\n\n\n\n\n\nConstraint: constraints on flow across a short pipe\n\n\n\n\n\nConstraint: Constraints on flow across a short pipe with on/off direction variables\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Direction-On/off-Constraints-5","page":"Constraints","title":"Direction On/off Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The disjunctive forms of problems (where directions are controlled by on/off variables) include special constraints to connect direction of flow with the choice of the binary variable.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_short_pipe_parallel_flow","category":"page"},{"location":"constraints/#GasModels.constraint_short_pipe_parallel_flow","page":"Constraints","title":"GasModels.constraint_short_pipe_parallel_flow","text":"Constraint: ensures that parallel lines have flow in the same direction\n\n\n\n\n\nTemplate: Constraints which ensure that parallel lines have flow in the same direction - customized for short pipe\n\n\n\n\n\n","category":"function"},{"location":"result-data/#GasModels-Result-Data-Format","page":"Result Data Format","title":"GasModels Result Data Format","text":"","category":"section"},{"location":"result-data/#The-Result-Data-Dictionary","page":"Result Data Format","title":"The Result Data Dictionary","text":"","category":"section"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"GasModels utilizes a dictionary to organize the results of a run command. The dictionary uses strings as key values so it can be serialized to JSON for algorithmic data exchange. The data dictionary organization is designed to be consistent with the GasModels The Network Data Dictionary.","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"At the top level the results data dictionary is structured as follows:","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"{\n\"optimizer\":<string>,        # name of the Julia class used to solve the model\n\"termination_status\":<type>, # optimizer status at termination\n\"dual_status\":<type>,        # optimizer dual status at termination\n\"primal_status\":<type>,      # optimizer primal status at termination\n\"solve_time\":<float>,        # reported solve time (seconds)\n\"objective\":<float>,         # the final evaluation of the objective function\n\"objective_lb\":<float>,      # the final lower bound of the objective function (if available)\n\"objective_gap\":<float>,     # the final gap between the lower bound and upper bound of the objective function (if available)\n\"machine\":{...},             # computer hardware information (details below)\n\"data\":{...},                # test case information (details below)\n\"solution\":{...}            # complete solution information (details below)\n}","category":"page"},{"location":"result-data/#Machine-Data","page":"Result Data Format","title":"Machine Data","text":"","category":"section"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"This object provides basic information about the hardware that was used when the run command was called.","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"{\n\"cpu\":<string>,    # CPU product name\n\"memory\":<string>  # the amount of system memory (units given)\n}","category":"page"},{"location":"result-data/#Case-Data","page":"Result Data Format","title":"Case Data","text":"","category":"section"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"This object provides basic information about the network cases that was used when the run command was called.","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"{\n\"name\":<string>,                # the name from the network data structure\n\"junction_count\":<int>,         # the number of nodes in the network data structure\n\"pipe_count\":<int>,             # the number of pipe edges in the network data structure\n\"valve_count\":<int>,            # the number of valve edges in the network data structure\n\"resistor_count\":<int>,         # the number of resistor edges in the network data structure\n\"loss_resistor_count\":<int>,    # the number of loss resistor edges in the network data structure\n\"regulator_count\":<int>,        # the number of valve edges in the network data structure\n\"short_pipe_count\":<int>,       # the number of short pipe edges in the network data structure\n\"compressor_count\":<int>        # the number of compressor edges in the network data structure\n}","category":"page"},{"location":"result-data/#Solution-Data","page":"Result Data Format","title":"Solution Data","text":"","category":"section"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"The solution object provides detailed information about the solution produced by the run command.  The solution is organized similarly to The Network Data Dictionary with the same nested structure and parameter names, when available.  A network solution most often only includes a small subset of the data included in the network data.","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"For example the data for a junction, data[\"junction\"][\"1\"] is structured as follows,","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"{\n\"p_min\": 0.0,\n\"p_max\": 1.0,\n...\n}","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"A solution specifying a pressure for the same case, i.e. result[\"solution\"][\"junction\"][\"1\"], would result in,","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"{\n\"p\":0.55,\n}","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"Because the data dictionary and the solution dictionary have the same structure InfrastructureModels update_data! helper function can be used to update a data dictionary with the values from a solution as follows,","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"InfrastructureModels.update_data!(data, result[\"solution\"])","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"By default, all results are reported in per-unit (non-dimenionalized). Below are common outputs of implemented optimization models","category":"page"},{"location":"result-data/","page":"Result Data Format","title":"Result Data Format","text":"{\n\"junction\":{\n    \"1\":{\n      \"p\": <float>,      # pressure. Non-dimensional quantity. Multiply by baseP to get pascals\n       ...\n    },\n    \"2\":{...},\n    ...\n},\n\"delivery\":{\n    \"1\":{\n      \"fl\": <float>,  # variable mass flow consumed. Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s.\n       ...\n    },\n    \"2\":{...},\n    ...\n},\n\"receipt\":{\n    \"1\":{\n      \"fg\": <float>,  # variable mass flow produced. Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s.\n    },\n    \"2\":{...},\n    ...\n},\n\"pipe\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the pipe.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"resistor\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the resistor.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"loss_resistor\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the loss resistor. Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s.\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"compressor\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the compressor.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n      \"ratio\": <float>,             # multiplicative compression ratio\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"regulator\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the compressor.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n      \"v\": <int>,                   # 1 if valve is open. 0 otherwise\n      \"r\": <float>,             # multiplicative decompression ratio\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"valve\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the compressor.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n      \"v\": <int>,                   # 1 if valve is open. 0 otherwise\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"short_pipe\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the compressor.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n      \"v\": <int>,                   # 1 if valve is open. 0 otherwise\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"ne_pipe\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the pipe.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n      \"built\": <float>,          # 1 if the pipe was built. 0 otherwise.\n        ...\n    },\n    \"2\":{...},\n    ...\n},\n\"ne_compressor\":{\n    \"1\":{\n      \"f\": <float>,                 # mass flow through the pipe.  Non-dimensional quantity. Multiply by baseQ/standard_density to get kg/s. Mass flux is obtained through division of the cross-sectional area (A) of the pipe. A= (pi*diameter^2)/4\n      \"yp\": <int>,                  # 1 if flux flows from f_junction. 0 otherwise\n      \"yn\": <int>,                  # 1 if flux flows from t_junction. 0 otherwise\n      \"r\": <float>,             # multiplicative compression ratio\n      \"built\": <float>,          # 1 if compressor was built. 0 otherwise.\n        ...\n    },\n    \"2\":{...},\n    ...\n}\n}","category":"page"},{"location":"formulations/#Gas-Model","page":"Network Formulations","title":"Gas Model","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"CurrentModule = GasModels","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"All methods for constructing gasmodels should be defined on the following type:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"AbstractGasModel","category":"page"},{"location":"formulations/#GasModels.AbstractGasModel","page":"Network Formulations","title":"GasModels.AbstractGasModel","text":"root of the gas formulation hierarchy\n\n\n\n\n\n","category":"type"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"which utilizes the following (internal) functions:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"build_ref","category":"page"},{"location":"formulations/#GasModels.build_ref","page":"Network Formulations","title":"GasModels.build_ref","text":"Builds the ref dictionary from the data dictionary. Additionally the ref dictionary would contain fields populated by the optional vector of ref_extensions provided as a keyword argument.\n\n\n\n\n\n","category":"function"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"When using the build_ref for transient problem formulations the following ref extension has to be added to populate the fields necessary for formulate the transient optimization problems.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"ref_add_transient!","category":"page"},{"location":"formulations/#GasModels.ref_add_transient!","page":"Network Formulations","title":"GasModels.ref_add_transient!","text":"adds the additional data into the ref that is required to used to formulate the transient formulation\n\n\n\n\n\n","category":"function"},{"location":"formulations/#Network-Formulations","page":"Network Formulations","title":"Network Formulations","text":"","category":"section"},{"location":"formulations/#Type-Hierarchy","page":"Network Formulations","title":"Type Hierarchy","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"We begin with the top of the hierarchy, where we can distinguish between the physics of gas flow models. There are currently five formulations supported in GasModels. Two full non convex formulations and three relaxations.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"AbstractWPModel <: AbstractGasModel\nAbstractDWPModel <: AbstractGasModel\nAbstractMISOCPModel <: AbstractGasModel\nAbstractLRDWPModel <: AbstractGasModel\nAbstractLRWPModel <: AbstractGasModel","category":"page"},{"location":"formulations/#Gas-Models","page":"Network Formulations","title":"Gas Models","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Each of these forms can be used as the type parameter for a GasModel, i.e.:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"WPGasModel <: AbstractWPForm\nMIDWPGasModel <: AbstractDWPModel\nCRDWPGasModel <: AbstractMISOCPModel\nLRDWPGasModel <: AbstractLRDWPModel\nLRWPGasModel <: AbstractLRWPModel","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"For details on AbstractGasModel, see the section on Gas Model.","category":"page"},{"location":"formulations/#User-Defined-Abstractions","page":"Network Formulations","title":"User-Defined Abstractions","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"The user-defined abstractions begin from a root abstract like the AbstractGasModel abstract type, i.e.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"AbstractMyFooModel <: AbstractGasModel\n\nStandardMyFooForm <: AbstractFooModel\nFooGasModel = AbstractGasModel{StandardFooForm}","category":"page"},{"location":"formulations/#Supported-Formulations","page":"Network Formulations","title":"Supported Formulations","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"All formulation names refer to how underlying physics of a gas network is modeled. For example, the LRWP model uses a linear representation of natural gas physics. If a model includes valves, then the resulting mathematical optimization problems will be mixed integer since valve controls are discrete.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Formulation Steady-State Transient Description\nWP Y Y Physics is modeled using nonlinear equations.\nDWP Y N Physics is modeled using nonlinear equations. Directionality of flow is modeled using discrete variables\nCRDWP Y N Physics is modeled using convex equations. Directionality of flow is modeled using discrete variables\nLRDWP Y N Physics is modeled using linear equations. Directionality of flow is modeled using discrete variables\nLRWP Y N Physics is modeled using linear equations.","category":"page"},{"location":"variables/#Variables","page":"Variables","title":"Variables","text":"","category":"section"},{"location":"variables/","page":"Variables","title":"Variables","text":"We provide the following methods to provide a compositional approach for defining common variables used in gas flow models. These methods should always be defined over \"AbstractGasModel\".","category":"page"},{"location":"variables/","page":"Variables","title":"Variables","text":"Modules = [GasModels]\nPages   = [\"core/variable.jl\"]\nOrder   = [:type, :function]\nPrivate  = true","category":"page"},{"location":"variables/#GasModels.get_compressor_pressure_aux-Tuple{AbstractGasModel, Int64, Any}","page":"Variables","title":"GasModels.get_compressor_pressure_aux","text":"Support function for getting a one off auxilleary pressure variable\n\n\n\n\n\n","category":"method"},{"location":"variables/#GasModels.get_compressor_y-Tuple{AbstractGasModel, Int64, Any}","page":"Variables","title":"GasModels.get_compressor_y","text":"Support function for getting a one off y direction variable\n\n\n\n\n\n","category":"method"},{"location":"variables/#GasModels.get_ne_compressor_pressure_aux-Tuple{AbstractGasModel, Int64, Any}","page":"Variables","title":"GasModels.get_ne_compressor_pressure_aux","text":"Support function for getting a one off auxilleary pressure variable\n\n\n\n\n\n","category":"method"},{"location":"variables/#GasModels.get_ne_compressor_y-Tuple{AbstractGasModel, Int64, Any}","page":"Variables","title":"GasModels.get_ne_compressor_y","text":"Support function for getting a one off y direction variable\n\n\n\n\n\n","category":"method"},{"location":"variables/#GasModels.variable_compressor_direction","page":"Variables","title":"GasModels.variable_compressor_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_compressor_direction_ne","page":"Variables","title":"GasModels.variable_compressor_direction_ne","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_compressor_mass_flow","page":"Variables","title":"GasModels.variable_compressor_mass_flow","text":"variables associated with mass flow in compressors\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_compressor_mass_flow_ne","page":"Variables","title":"GasModels.variable_compressor_mass_flow_ne","text":"variables associated with mass flow in compressors in expansion planning\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_compressor_ne","page":"Variables","title":"GasModels.variable_compressor_ne","text":"variables associated with building compressors\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_compressor_ratio_sqr","page":"Variables","title":"GasModels.variable_compressor_ratio_sqr","text":"Variable Set: variables associated with compression ratios\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_compressor_ratio_sqr_ne","page":"Variables","title":"GasModels.variable_compressor_ratio_sqr_ne","text":"Variable Set: variables associated with compression ratios\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_connection_direction","page":"Variables","title":"GasModels.variable_connection_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_connection_direction_ne","page":"Variables","title":"GasModels.variable_connection_direction_ne","text":"variables associated with direction of flow on new connections. y = 1 imples flow goes from fjunction to tjunction. y = 0 imples flow goes from tjunction to fjunction\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_flow","page":"Variables","title":"GasModels.variable_flow","text":"Variable Set: Define variables needed for modeling flow across connections\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_flow_ne","page":"Variables","title":"GasModels.variable_flow_ne","text":"Variable Set: Define variables needed for modeling flow across connections that are expansions\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_load_mass_flow","page":"Variables","title":"GasModels.variable_load_mass_flow","text":"variables associated with demand\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_loss_resistor_direction","page":"Variables","title":"GasModels.variable_loss_resistor_direction","text":"variables associated with direction of flow on on lossresistors. y = 1 imples flow goes from fjunction to tjunction. y = 0 imples flow goes from tjunction to f_junction\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_loss_resistor_mass_flow","page":"Variables","title":"GasModels.variable_loss_resistor_mass_flow","text":"variables associated with mass flow in loss_resistors\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_mass_flow","page":"Variables","title":"GasModels.variable_mass_flow","text":"all variables associated with mass flow\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_mass_flow_ne","page":"Variables","title":"GasModels.variable_mass_flow_ne","text":"all variables associated with mass flow in expansion planning\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_on_off_operation","page":"Variables","title":"GasModels.variable_on_off_operation","text":"0-1 variables associated with operating edge components\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pipe_direction","page":"Variables","title":"GasModels.variable_pipe_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pipe_direction_ne","page":"Variables","title":"GasModels.variable_pipe_direction_ne","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pipe_mass_flow","page":"Variables","title":"GasModels.variable_pipe_mass_flow","text":"variables associated with mass flow in pipes\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pipe_mass_flow_ne","page":"Variables","title":"GasModels.variable_pipe_mass_flow_ne","text":"variables associated with mass flow in pipes in expansion planning\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pipe_ne","page":"Variables","title":"GasModels.variable_pipe_ne","text":"variables associated with building pipes\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pressure","page":"Variables","title":"GasModels.variable_pressure","text":"variables associated with (nonsquared) pressure\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_pressure_sqr","page":"Variables","title":"GasModels.variable_pressure_sqr","text":"variables associated with pressure squared\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_production_mass_flow","page":"Variables","title":"GasModels.variable_production_mass_flow","text":"variables associated with production\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_regulator_direction","page":"Variables","title":"GasModels.variable_regulator_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_regulator_mass_flow","page":"Variables","title":"GasModels.variable_regulator_mass_flow","text":"variables associated with mass flow in regulators\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_regulator_on_off_operation","page":"Variables","title":"GasModels.variable_regulator_on_off_operation","text":"0-1 variables associated with operating regulators\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_resistor_direction","page":"Variables","title":"GasModels.variable_resistor_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_resistor_mass_flow","page":"Variables","title":"GasModels.variable_resistor_mass_flow","text":"variables associated with mass flow in resistors\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_short_pipe_direction","page":"Variables","title":"GasModels.variable_short_pipe_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_short_pipe_mass_flow","page":"Variables","title":"GasModels.variable_short_pipe_mass_flow","text":"variables associated with mass flow in short pipes\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_storage","page":"Variables","title":"GasModels.variable_storage","text":"Variable Set: Define variables needed for modeling flow across storage\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_storage_mass_flow","page":"Variables","title":"GasModels.variable_storage_mass_flow","text":"variables associated with storage flows\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_transfer_mass_flow","page":"Variables","title":"GasModels.variable_transfer_mass_flow","text":"variables associated with transfer\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_valve_direction","page":"Variables","title":"GasModels.variable_valve_direction","text":"variables associated with direction of flow on the connections. y = 1 imples flow goes from fjunction to tjunction.  y = 0 imples flow goes from tjunction to fjunction. O flow can have y = 0 or 1\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_valve_mass_flow","page":"Variables","title":"GasModels.variable_valve_mass_flow","text":"variables associated with mass flow in valves\n\n\n\n\n\n","category":"function"},{"location":"variables/#GasModels.variable_valve_on_off_operation","page":"Variables","title":"GasModels.variable_valve_on_off_operation","text":"0-1 variables associated with operating valves\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#Transient-Problem-Specifications","page":"Transient Specifications","title":"Transient Problem Specifications","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"CurrentModule = GasModels","category":"page"},{"location":"transient-specifications/#Optimal-Gas-Flow","page":"Transient Specifications","title":"Optimal Gas Flow","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"The transient optimal gas flow problem optimizes a linear combination of the total compressor power and the total load shed in the system subject to the time-varying pipeline dynamics modeled as ordinary-differential equations (ODEs), discretized using Backward Euler scheme. The readers are referred to this paper or its (arxiv version) for a derivation of the ODEs. Also, note that the Optimal Gas Flow problem currently can work with only time-periodic time-series data. If the data is not time-periodic, then GasModels will try to fit a time-periodic spline to the data and then run the transient optimal gas flow problem.","category":"page"},{"location":"transient-specifications/#Model","page":"Transient Specifications","title":"Model","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"build_transient_ogf","category":"page"},{"location":"transient-specifications/#GasModels.build_transient_ogf","page":"Transient Specifications","title":"GasModels.build_transient_ogf","text":"Builds the transient optimal gas flow Nonlinear problem\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#Variables","page":"Transient Specifications","title":"Variables","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"variable_density\nvariable_compressor_flow\nvariable_c_ratio\nvariable_compressor_power\n\nvariable_pipe_flux_avg\nvariable_pipe_flux_neg\n\nvariable_injection\nvariable_withdrawal\nvariable_transfer_flow\n        \nvariable_storage_flow\nvariable_storage_c_ratio\nvariable_reservoir_density\nvariable_well_density\nvariable_well_flux_avg\nvariable_well_flux_neg","category":"page"},{"location":"transient-specifications/#GasModels.variable_density","page":"Transient Specifications","title":"GasModels.variable_density","text":"variables associated with density (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_compressor_flow","page":"Transient Specifications","title":"GasModels.variable_compressor_flow","text":"variables associated with compressor mass flow (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_c_ratio","page":"Transient Specifications","title":"GasModels.variable_c_ratio","text":"variables associated with compression ratio (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_compressor_power","page":"Transient Specifications","title":"GasModels.variable_compressor_power","text":"variables associated with compression power (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_pipe_flux_avg","page":"Transient Specifications","title":"GasModels.variable_pipe_flux_avg","text":"variables associated with pipe flux average (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_pipe_flux_neg","page":"Transient Specifications","title":"GasModels.variable_pipe_flux_neg","text":"variables associated with pipe flux negative (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_injection","page":"Transient Specifications","title":"GasModels.variable_injection","text":"variables associated with injection in receipts (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_withdrawal","page":"Transient Specifications","title":"GasModels.variable_withdrawal","text":"variables associated with withdrawal in deliveries (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_transfer_flow","page":"Transient Specifications","title":"GasModels.variable_transfer_flow","text":"variables associated with net withdrawal in transfers (transient)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_storage_flow","page":"Transient Specifications","title":"GasModels.variable_storage_flow","text":"variables associated with storage flows\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_storage_c_ratio","page":"Transient Specifications","title":"GasModels.variable_storage_c_ratio","text":"variables associated with well compressor/regulator ratio\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_reservoir_density","page":"Transient Specifications","title":"GasModels.variable_reservoir_density","text":"variables associated with reservoir density\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_well_density","page":"Transient Specifications","title":"GasModels.variable_well_density","text":"variables associated with the nodal densities of the well\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_well_flux_avg","page":"Transient Specifications","title":"GasModels.variable_well_flux_avg","text":"variables associated with the average well fluxes for the storages\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_well_flux_neg","page":"Transient Specifications","title":"GasModels.variable_well_flux_neg","text":"variables associated with the neg. well fluxes for the storages\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#Expressions","page":"Transient Specifications","title":"Expressions","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"The following linear and non-linear expressions are created by the formulation for ease of formulating the constraints","category":"page"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"variable_pipe_flux_fr\nvariable_pipe_flux_to\nvariable_well_flux_fr\nvariable_well_flux_to\nexpression_density_derivative\nexpression_net_nodal_injection\nexpression_net_nodal_edge_out_flow\nexpression_compressor_power\nexpression_well_density_derivative\nexpression_reservoir_density_derivative","category":"page"},{"location":"transient-specifications/#GasModels.variable_pipe_flux_fr","page":"Transient Specifications","title":"GasModels.variable_pipe_flux_fr","text":"variables associated with pipe flux (from)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_pipe_flux_to","page":"Transient Specifications","title":"GasModels.variable_pipe_flux_to","text":"variables associated with pipe flux (to)\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_well_flux_fr","page":"Transient Specifications","title":"GasModels.variable_well_flux_fr","text":"variables associated with the (from) well fluxes for the storages\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.variable_well_flux_to","page":"Transient Specifications","title":"GasModels.variable_well_flux_to","text":"variables associated with the (to) well fluxes for the storages\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.expression_density_derivative","page":"Transient Specifications","title":"GasModels.expression_density_derivative","text":"density derivative\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.expression_net_nodal_injection","page":"Transient Specifications","title":"GasModels.expression_net_nodal_injection","text":"net nodal injection\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.expression_net_nodal_edge_out_flow","page":"Transient Specifications","title":"GasModels.expression_net_nodal_edge_out_flow","text":"net nodal edge flow out\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.expression_compressor_power","page":"Transient Specifications","title":"GasModels.expression_compressor_power","text":"compression power\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.expression_well_density_derivative","page":"Transient Specifications","title":"GasModels.expression_well_density_derivative","text":"density derivative for well nodal densities\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.expression_reservoir_density_derivative","page":"Transient Specifications","title":"GasModels.expression_reservoir_density_derivative","text":"density derivative for storage reservoir\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#Constraints-and-Constraint-Templates","page":"Transient Specifications","title":"Constraints and Constraint Templates","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"constraint_slack_junction_density\nconstraint_nodal_balance\nconstraint_nodal_balance\nconstraint_pipe_mass_balance\nconstraint_pipe_momentum_balance\nconstraint_compressor_physics\nconstraint_compressor_power\nconstraint_storage_compressor_regulator\nconstraint_storage_well_momentum_balance\nconstraint_storage_well_mass_balance\nconstraint_storage_well_nodal_balance\nconstraint_storage_bottom_hole_reservoir_density\nconstraint_storage_reservoir_physics","category":"page"},{"location":"transient-specifications/#GasModels.constraint_slack_junction_density","page":"Transient Specifications","title":"GasModels.constraint_slack_junction_density","text":"Constraint: fixing slack node density value\n\n\n\n\n\nTemplate: fixing slack node density value\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_nodal_balance","page":"Transient Specifications","title":"GasModels.constraint_nodal_balance","text":"Constraint: nodal balance\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_pipe_mass_balance","page":"Transient Specifications","title":"GasModels.constraint_pipe_mass_balance","text":"Constraint: pipe mass balance\n\n\n\n\n\nTemplate: pipe mass balance\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_pipe_momentum_balance","page":"Transient Specifications","title":"GasModels.constraint_pipe_momentum_balance","text":"Constraint: pipe momentum balance\n\n\n\n\n\nTemplage: pipe momentum balance\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_compressor_physics","page":"Transient Specifications","title":"GasModels.constraint_compressor_physics","text":"Constraint: compressor physics\n\n\n\n\n\nTemplate: compressor physics\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_compressor_power","page":"Transient Specifications","title":"GasModels.constraint_compressor_power","text":"Constraint: compressor power\n\n\n\n\n\nTemplate: compressor power\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_storage_compressor_regulator","page":"Transient Specifications","title":"GasModels.constraint_storage_compressor_regulator","text":"Constraint: well compression/pressure-reduction\n\n\n\n\n\nTemplate: storage compression/pressure-reduction\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_storage_well_momentum_balance","page":"Transient Specifications","title":"GasModels.constraint_storage_well_momentum_balance","text":"Constraint: well momentum balance\n\n\n\n\n\nTemplate: well momentum balance\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_storage_well_mass_balance","page":"Transient Specifications","title":"GasModels.constraint_storage_well_mass_balance","text":"Constraint: well mass balance\n\n\n\n\n\nTemplate: well mass balance\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_storage_well_nodal_balance","page":"Transient Specifications","title":"GasModels.constraint_storage_well_nodal_balance","text":"Constraint: storage well nodal balance\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_storage_bottom_hole_reservoir_density","page":"Transient Specifications","title":"GasModels.constraint_storage_bottom_hole_reservoir_density","text":"Constraint: equivalence of bottom hole density and reservoir density\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.constraint_storage_reservoir_physics","page":"Transient Specifications","title":"GasModels.constraint_storage_reservoir_physics","text":"Constraint: reservoir physics\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#Objective","page":"Transient Specifications","title":"Objective","text":"","category":"section"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"Three types of objectives are supported by the transient OGF problem (i) a load shedding objective, (ii) a compressor power objective, and (iii)  a linear combination of both controlled by the optional argument economic_weighting in the Matlab static file. ","category":"page"},{"location":"transient-specifications/","page":"Transient Specifications","title":"Transient Specifications","text":"objective_min_transient_load_shed\nobjective_min_transient_compressor_power\nobjective_min_transient_economic_costs","category":"page"},{"location":"transient-specifications/#GasModels.objective_min_transient_load_shed","page":"Transient Specifications","title":"GasModels.objective_min_transient_load_shed","text":"minimum load shedding objective for transient OGF problem\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.objective_min_transient_compressor_power","page":"Transient Specifications","title":"GasModels.objective_min_transient_compressor_power","text":"minium compressor power objective for transient OGF problem\n\n\n\n\n\n","category":"function"},{"location":"transient-specifications/#GasModels.objective_min_transient_economic_costs","page":"Transient Specifications","title":"GasModels.objective_min_transient_economic_costs","text":"transient objective for minimizing a linear combination of compressor power and load shed\n\n\n\n\n\n","category":"function"},{"location":"examples/#Examples-Documentation","page":"Examples","title":"Examples Documentation","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The examples folder contains a library gas network instances which have been developed in the literature.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Many of the examples can be run using the run_examples.jl script which executes various problems and formulations on the library of instances and verifies that GasModels returns solutions which were reported in the literature.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Long term, the plan is to move the examples out of the GasModels repository and maintain a special GasModelsLib repository specifically for warehousing models developed in the literature.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Problems Source\n24-pipe-benchmark [1]\nA3 [2]\ncase-30 [1]\ngaslib-40-E-* [2]\ngaslib-135-F-* [2]\ngaslib-582-G-* [2]\ndistributionbenchmark65 [3]","category":"page"},{"location":"examples/#Sources","page":"Examples","title":"Sources","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"[1] Unknown","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"[2] Conrado Borraz-Sanchez, Russell Bent, Scott Backhaus, Hassan Hijazi and Pascal Van Hentenryck. \"Convex Relaxations for Gas Expansion Planning\". INFORMS Journal on Computing, 28 (4): 645-656, 2016.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"[3] C. Brosig, S. Fassbender, E. Waffenschmidt, S. Janocha and B. Klaassen, \"Benchmark gas distribution network for cross-sectoral applications,\" 2017 International Energy and Sustainability Conference (IESC), Farmingdale, NY, 2017, pp. 1-5, doi: 10.1109/IESC.2017.8283183. *","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This benchmark was modified for GasModels in the following ways","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(i) properties of the gas were modified to reflect standard methanes (ii) friction factors were computed using the formula stated in https://arxiv.org/pdf/2009.14726.pdf - (2 ln ((3.7*diameter) / roughness))^-2 (iii) MW load values (for gas) conversion.  MW to Joules per second (multiply MW by 1,000,000). Joules per second to BTU per second  (multiply J/s by 0.00095). BTU per second to ft^3/s (there are 1,030 BTUs per cubic foot for natural gas, so divide by 1030 to get ft^3). ft^3/s to m^3/s (multiply by 0.0283168) m^3/s to kg/ s (multiply by density of gas - used .68 as a \"standard density\")","category":"page"},{"location":"objective/#Objective","page":"Objective","title":"Objective","text":"","category":"section"},{"location":"objective/","page":"Objective","title":"Objective","text":"Modules = [GasModels]\nPages   = [\"core/objective.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"objective/#GasModels.objective_max_load","page":"Objective","title":"GasModels.objective_max_load","text":"function for maximizing prioritzed load: max sum_i in cal D  omega_i boldsymbold_i\n\n\n\n\n\n","category":"function"},{"location":"objective/#GasModels.objective_min_compressor_energy","page":"Objective","title":"GasModels.objective_min_compressor_energy","text":"function for minimizing compressor energy\n\n\n\n\n\n","category":"function"},{"location":"objective/#GasModels.objective_min_economic_costs","page":"Objective","title":"GasModels.objective_min_economic_costs","text":"function for minimizing economic costs: min sum_j in cal D kappa_j boldsymbold_j - sum_j in cal T kappa_j boldsymboltau_j - sum_j in cal R kappa_j boldsymbolr_j -     sum_ijk in cal C boldsymbolf_ijk (boldsymbolalpha_ijk^m - 1)\n\n\n\n\n\n","category":"function"},{"location":"objective/#GasModels.objective_min_ne_cost","page":"Objective","title":"GasModels.objective_min_ne_cost","text":"function for costing expansion of pipes and compressors: sum_k in ne_pipe c_k zp_k  +  sum_k in ne_compressor c_k zc_k\n\n\n\n\n\n","category":"function"},{"location":"objective/#GasModels.objective_min_transient_compressor_power-Tuple{AbstractGasModel, Any}","page":"Objective","title":"GasModels.objective_min_transient_compressor_power","text":"minium compressor power objective for transient OGF problem\n\n\n\n\n\n","category":"method"},{"location":"objective/#GasModels.objective_min_transient_economic_costs-Tuple{AbstractGasModel, Any}","page":"Objective","title":"GasModels.objective_min_transient_economic_costs","text":"transient objective for minimizing a linear combination of compressor power and load shed\n\n\n\n\n\n","category":"method"},{"location":"objective/#GasModels.objective_min_transient_load_shed-Tuple{AbstractGasModel, Any}","page":"Objective","title":"GasModels.objective_min_transient_load_shed","text":"minimum load shedding objective for transient OGF problem\n\n\n\n\n\n","category":"method"},{"location":"direction/#Direction-Documentation","page":"Direction Model","title":"Direction Documentation","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"The data format allows the user to specify the design criteria associated with direction of flow through an edge.  For example, a pipe can be designed to allow bi directional flow, in which case the flow may travel in either direction through the pipe.  Or, a pipe may be designed for uni directional flow.  In which case, the flow may only travel from the from junction to the to junction.  In certain cases, it may be desirable to specify a direction flow that goes beyond the physical characteristics of an edge. For example, while a pipe may be designed for bi directional flow, a user may find it useful to specify in case that the flow should be in \"reverse\" direction. For such situations, the key word flow_direction has been reserved to allow the user to specify a direction of flow, where flow_direction=-1 denotes reversal of flow, flow_direction=0 denotes unspecified direction, and flow_direction=1 denotes forward flow. The next few tables describes the behavior of flow_direction when combined with design criteria for flow.  ","category":"page"},{"location":"direction/#Pipe","page":"Direction Model","title":"Pipe","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"is_bidirectional flow_direction description\n1 -1 reverse flow only\n1 0 flow in both directions\n1 1 forward flow only\n0 -1 no flow\n0 0 forward flow only\n0 1 forward flow only","category":"page"},{"location":"direction/#Compressor","page":"Direction Model","title":"Compressor","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"directionality flow_direction description\n0 -1 reverse flow with compression\n0 0 flow and compression in either directions\n0 1 forward flow with compression\n1 -1 no flow\n1 0 forward flow with compression\n1 1 forward flow with compression\n2 -1 reverse flow without compression\n2 0 forward flow with compression or reverse flow without compression\n2 1 forward flow with compression","category":"page"},{"location":"direction/#Regulator","page":"Direction Model","title":"Regulator","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"is_bidirectional flow_direction description\n1 -1 reverse flow with no pressure reduction\n1 0 reverse flow with no pressure reduction or forward flow with pressure reduction\n1 1 forward flow with pressure reduction\n0 -1 no flow\n0 0 forward flow with pressure reduction\n0 1 forward flow with pressure reduction","category":"page"},{"location":"direction/#Valve","page":"Direction Model","title":"Valve","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"is_bidirectional flow_direction description\n1 -1 reverse flow only\n1 0 flow in both directions\n1 1 forward flow only\n0 -1 no flow\n0 0 forward flow only\n0 1 forward flow only","category":"page"},{"location":"direction/#Resistor","page":"Direction Model","title":"Resistor","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"is_bidirectional flow_direction description\n1 -1 reverse flow only\n1 0 flow in both directions\n1 1 forward flow only\n0 -1 no flow\n0 0 forward flow only\n0 1 forward flow only","category":"page"},{"location":"direction/#Short-Pipe","page":"Direction Model","title":"Short Pipe","text":"","category":"section"},{"location":"direction/","page":"Direction Model","title":"Direction Model","text":"is_bidirectional flow_direction description\n1 -1 reverse flow only\n1 0 flow in both directions\n1 1 forward flow only\n0 -1 no flow\n0 0 forward flow only\n0 1 forward flow only","category":"page"},{"location":"#GasModels.jl-Documentation","page":"Home","title":"GasModels.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = GasModels","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"GasModels.jl is a Julia/JuMP package for Gas Network Optimization. It provides utilities for parsing and modifying network data (see GasModels Network Data Format for details), and is designed to enable computational evaluation of emerging gas network formulations and algorithms in a common platform. It includes support for steady-state and transient formulations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The code is engineered to decouple Steady State Problem Specifications (e.g. Gas Flow, Expansion Planning, ...) from Network Formulations (e.g. DWP, CRDWP-relaxation, ...). This enables the definition of a wide variety of gas network formulations and their comparison on common problem specifications.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The latest stable release of GasModels is installed using the Julia package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"add GasModels","category":"page"},{"location":"","page":"Home","title":"Home","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"","page":"Home","title":"Home","text":"checkout GasModels","category":"page"},{"location":"","page":"Home","title":"Home","text":"At least one optimizer is required for running GasModels.  The open-source optimizer Juniper is recommended and can be used to solve a wide variety of the problems and network formulations provided in GasModels.  The Juniper optimizer can be installed via the package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"add Juniper","category":"page"},{"location":"","page":"Home","title":"Home","text":"Test that the package works by running","category":"page"},{"location":"","page":"Home","title":"Home","text":"test GasModels","category":"page"}]
}
